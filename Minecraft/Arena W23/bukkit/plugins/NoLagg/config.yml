#> 
#> This is the configuration of NoLagg, in here you can enable or disable features as you please
#> For more information, you can visit the following websites:
#> http://dev.bukkit.org/server-mods/nolagg/
#> http://forums.bukkit.org/threads/nolagg.36986/

# Manages chunk loading and sending to clients using various new settings, also fixes chunk unload problems
chunks:
  # Whether Chunks should be loaded on startup
  enabled: true
  # The minimum chunk sending rate (chunks/tick)
  minRate: 0.25
  # The maximum chunk sending rate (chunks/tick)
  maxRate: 1.5
  # If you use a plugin that depends on the net server handler for packets, disable this
  # For example, Raw Critics' Ore Obfuscation does not function with this enabled.
  # Orebfuscator is supported and works with this enabled.
  bufferedLoader:
    # Whether or not to use the buffered packet loader to reduce new memory allocation
    enabled: true
    # The amount of threads to use to compress the chunk packets (increase if it can't keep up)
    threadCount: 2
  # Sets whether the dynamic view distance should be enforced
  # If you use maxTPS, set this to false, or it will conflict!
  useDynamicView: true
  # Sets multiple view distances for different amounts of loaded chunks (chunk_count: view_chunks)
  # To disable, remove all chunk: view nodes. The view is smoothed out between nodes
  # The dynamic view distance will never be higher than the server view distance!
  dynamicView:
  - 0 = 13
  - 5000 = 13
  - 10000 = 13
  - 60000 = 13
  # Sets in what order chunks are sent to the client
  # Available modes: SLOPE and SPIRAL
  sendOrder: SLOPE

# Can examine server tick rate performance
examine:
  # Whether Examine should be loaded on startup
  enabled: true
  
  # The maximum time in ticks a generated examine report can be
  # It can be increased, but the generated file might be too large for the viewer to handle
  maxExamineTime: 72000
  
  # The folder in which the .exam files are saved
  exportFolder: plugins

# Can monitor and log server and player performance statistics
monitor:
  # Whether Monitor should be loaded on startup
  enabled: true
  # The interval at which new performance snapshots are generated
  monitorInterval: 40
  # Whether or not to start logging server performance on startup
  startLoggingOnStartup: false
  
  # The server notifies players (with a permission) when the tick rate drops below the threshold
  lagNotifier:
    # Enable or disable this feature
    enabled: false
    # The interval in miliseconds to send this message (1000 ms = 1 second)
    interval: 10000
    # The tick rate at which it starts broadcasting
    threshold: 15.0
    # The message to send to these players
    message: &cThe server can't keep up!

# Buffers items in chunks to prevent lag-outs because of lots of items
itembuffer:
  # Whether ItemBuffer should be loaded on startup
  enabled: true
  # The maximum amount of items allowed per chunk
  maxItemsPerChunk: 80

# Stacks nearby items to counter item-drop spammers and reduce item count on the server
itemstacker:
  # Whether ItemStacker should be loaded on startup
  enabled: true
  # The block radius to look for other items when stacking
  # You can set it for multiple worlds
  radius:
    default: 1.0
  # The amount of (physical) items needed to form one stack
  threshold: 2
  # The interval in ticks at which item stacking is performed (1 tick = 1/20 sec)
  interval: 20
  
  # The item types (materials) to ignore during item stacking, buffering and spawn limits
  # Use 'orb' to ignore experience orbs
  ignoredItemTypes:
  - DIAMOND_PICKAXE
  - WOODEN_HOE

# Attempts to fix block and sky lighting bugs in worlds
lighting:
  # Whether Lighting should be loaded on startup
  enabled: true
  # Whether or not lighting is automatically fixed when a new chunk is generated
  auto: true
  # The minimum amount of memory (in MB) allowed while processing
  # If the remaining free memory drops below this value, measures are taken to reduce it
  # Memory will be Garbage Collected and all worlds will be saved to free memory
  minFreeMemory: 100

# Keeps entity counts below multiple configured thresholds
spawnlimiter:
  # Whether SpawnLimiter should be loaded on startup
  enabled: false

# Replaces explosion creation with a faster version and buffers TNT ignites to prevent TNT server crashes
tnt:
  # Whether TNT should be loaded on startup
  enabled: true
  # The interval (in ticks) at which TNT is detonated by explosions
  detonationInterval: 1
  # How many TNT is detonated by explosions per interval
  detonationRate: 10
  # The explosion crater size factor
  explosionRadiusFactor: 1.0
  # The amount of explosion packets to send to the clients per tick
  explosionRate: 5
  # If TNT explosions can change non-TNT blocks
  changeBlocks: true

# Alters the way worlds are saved to reduce disk usage and to force proper saves
saving:
  # Whether Saving should be loaded on startup
  enabled: true
  # The tick interval at which the server saves automatically (20 ticks = 1 second)
  autoSaveInterval: 400
  # The amount of chunks saved every tick when autosaving
  # If saving causes severe tick lag, lower it, if it takes too long, increase it
  autoSaveBatchSize: 20
  # Whether NoLagg will attempt to write all world data to the region files at a set interval
  # This is done on another thread, so don't worry about the main thread lagging while this happens
  writeDataEnabled: true
  # The tick interval at which the server actually writes the chunk data to file (20 ticks = 1 second)
  writeDataInterval: 12000
  # Whether player data of all players is routinely saved next to the chunks
  # This may result in performance issues or even thread locking on some servers
  # Enabling it should not be a problem for small-player-count servers
  savePlayers: false

# Common features such as the clear and garbage collect commands
common:
  # Whether Common should be loaded on startup
  enabled: true
  
  # Several shortcuts you can use for the /nolagg clear(all) command
  clearShortcuts:
    enemies:
    - monster
    notneutral:
    - monster
    - item
    - tnt
    - egg
    - arrow
    # The entity types removed when using /lag clear all
    all:
    - items
    - mobs
    - fallingblocks
    - tnt
    - xporb
    - minecart
    - boat
    # The entity types removed when using /lag clear without arguments
    default:
    - items
    - tnt
    - xporb

# Notifies the current stack trace of the main thread when the server freezes
threadlocknotifier:
  # Whether ThreadLockNotifier should be loaded on startup
  enabled: true

# Notifies when a main-thread only event is called from another thread to detect instabilities it may cause
threadcheck:
  # Whether ThreadCheck should be loaded on startup
  enabled: true

# Patches certain classes and functions from CraftBukkt
patches:
  # Whether Patches should be loaded on startup
  enabled: true
  
  # Sets whether to automatically fix the player head rotation when spawning
  # This is done by sending additional rotation information after spawning the player at the client
  headRotationOnSpawn: true
  
  # Sets whether to fix up the vehicle (minecart) and mob spawn positions when spawning, avoiding glitched positions
  # In-depth: Minecraft server contains a bug in the EntityTrackerEntry which results in spawn packets sent with 'too new' positions
  # This 'too new' position is then further updated with relative updates, resulting in entities spawning with a slight offset
  # In the case of minecarts, you see minecarts spawned moving next to the rails, floating. This is fixed
  entitySpawnFix: true


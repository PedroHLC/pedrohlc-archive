; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	L:\Projetos\RPGXP\PHLC Netplay\PHLCServer\PHLCServer\PHLCServer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?hSocket@@3IA					; hSocket
PUBLIC	?pDebugFile@@3PAU_iobuf@@A			; pDebugFile
PUBLIC	?exit_cmd@@3_NA					; exit_cmd
PUBLIC	?printdebug@@3_NA				; printdebug
PUBLIC	?nogetch@@3_NA					; nogetch
PUBLIC	?msgs_motd@@3PADA				; msgs_motd
PUBLIC	?msgs_welcome@@3PADA				; msgs_welcome
PUBLIC	?host_addr@@3PADA				; host_addr
PUBLIC	?mysql_addr@@3PADA				; mysql_addr
PUBLIC	?mysql_user@@3PADA				; mysql_user
PUBLIC	?mysql_pass@@3PADA				; mysql_pass
PUBLIC	?mysql_database@@3PADA				; mysql_database
PUBLIC	?host_port@@3HA					; host_port
PUBLIC	?connect_id@@3HA				; connect_id
PUBLIC	?host_maxuser@@3HA				; host_maxuser
PUBLIC	?host_socktype@@3HA				; host_socktype
PUBLIC	?mysql_cfgport@@3HA				; mysql_cfgport
PUBLIC	?hSLoopThread@@3PAXA				; hSLoopThread
PUBLIC	?dwSLoopThread@@3KA				; dwSLoopThread
PUBLIC	?pSLoopFunc@@3PAXA				; pSLoopFunc
PUBLIC	?pCLientFunc@@3PAXA				; pCLientFunc
PUBLIC	?smysql@@3VSimpleMysql@@A			; smysql
PUBLIC	?client_list@@3PAVClient@@A			; client_list
PUBLIC	?crossdomain@@3PADA				; crossdomain
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?finish_getchmsg@@3PADA				; finish_getchmsg
_BSS	SEGMENT
?hSocket@@3IA DD 01H DUP (?)				; hSocket
?pDebugFile@@3PAU_iobuf@@A DD 01H DUP (?)		; pDebugFile
?exit_cmd@@3_NA DB 01H DUP (?)				; exit_cmd
	ALIGN	4

?printdebug@@3_NA DB 01H DUP (?)			; printdebug
	ALIGN	4

?nogetch@@3_NA DB 01H DUP (?)				; nogetch
	ALIGN	4

?msgs_motd@@3PADA DB 080H DUP (?)			; msgs_motd
?msgs_welcome@@3PADA DB 080H DUP (?)			; msgs_welcome
?host_addr@@3PADA DB 0fH DUP (?)			; host_addr
	ALIGN	4

?mysql_addr@@3PADA DB 0fH DUP (?)			; mysql_addr
	ALIGN	4

?mysql_user@@3PADA DB 041H DUP (?)			; mysql_user
	ALIGN	4

?mysql_pass@@3PADA DB 041H DUP (?)			; mysql_pass
	ALIGN	4

?mysql_database@@3PADA DB 041H DUP (?)			; mysql_database
	ALIGN	4

?host_port@@3HA DD 01H DUP (?)				; host_port
?connect_id@@3HA DD 01H DUP (?)				; connect_id
?host_maxuser@@3HA DD 01H DUP (?)			; host_maxuser
?host_socktype@@3HA DD 01H DUP (?)			; host_socktype
?mysql_cfgport@@3HA DD 01H DUP (?)			; mysql_cfgport
?hSLoopThread@@3PAXA DD 01H DUP (?)			; hSLoopThread
?dwSLoopThread@@3KA DD 01H DUP (?)			; dwSLoopThread
?pSLoopFunc@@3PAXA DD 01H DUP (?)			; pSLoopFunc
?pCLientFunc@@3PAXA DD 01H DUP (?)			; pCLientFunc
?smysql@@3VSimpleMysql@@A DD 01H DUP (?)		; smysql
?client_list@@3PAVClient@@A DD 01H DUP (?)		; client_list
_BSS	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
_DATA	SEGMENT
?crossdomain@@3PADA DB '<?xml version="1.0"?>', 0aH, '<cross-domain-polic'
	DB	'y xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:n'
	DB	'oNamespaceSchemaLocation="http://www.adobe.com/xml/schemas/Po'
	DB	'licyFileSocket.xsd">', 0aH, '<allow-access-from domain="*" to'
	DB	'-ports="*" secure="false" />', 0aH, '<site-control permitted-'
	DB	'cross-domain-policies="all" />', 0aH, '</cross-domain-policy>'
	DB	0aH, 00H, 00H				; crossdomain
	ORG $+3
?finish_getchmsg@@3PADA DB 'Pressione ENTER para finalizar o aplicativo', 00H ; finish_getchmsg
_DATA	ENDS
PUBLIC	?finish@@YAXXZ					; finish
EXTRN	__imp__exit:PROC
EXTRN	__imp__getch:PROC
EXTRN	__imp__puts:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File l:\projetos\rpgxp\phlc netplay\phlcserver\phlcserver\phlcserver.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?finish@@YAXXZ
_TEXT	SEGMENT
?finish@@YAXXZ PROC					; finish, COMDAT
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 35
	movzx	eax, BYTE PTR ?nogetch@@3_NA		; nogetch
	test	eax, eax
	jne	SHORT $LN1@finish
; Line 36
	mov	esi, esp
	push	OFFSET ?finish_getchmsg@@3PADA		; finish_getchmsg
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	mov	esi, esp
	call	DWORD PTR __imp__getch
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@finish:
; Line 39
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@finish:
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?finish@@YAXXZ ENDP					; finish
_TEXT	ENDS
PUBLIC	??_C@_0BA@NJJABCMP@MySQL?9Erro?3?5?$CFs?6?$AA@	; `string'
PUBLIC	??$vsprintf_s@$0EAA@@@YAHAAY0EAA@DPBDPAD@Z	; vsprintf_s<1024>
PUBLIC	__$ArrayPad$
PUBLIC	?query@SimpleMysql@@QAAXPBDZZ			; SimpleMysql::query
EXTRN	__imp__printf:PROC
EXTRN	_mysql_error@4:PROC
EXTRN	_mysql_query@8:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_0BA@NJJABCMP@MySQL?9Erro?3?5?$CFs?6?$AA@
; File l:\projetos\rpgxp\phlc netplay\phlcserver\phlcserver\simplemysql.hpp
CONST	SEGMENT
??_C@_0BA@NJJABCMP@MySQL?9Erro?3?5?$CFs?6?$AA@ DB 'MySQL-Erro: %s', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?query@SimpleMysql@@QAAXPBDZZ
_TEXT	SEGMENT
_ap$ = -1044						; size = 4
_query$ = -1032						; size = 1024
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_query_s$ = 12						; size = 4
?query@SimpleMysql@@QAAXPBDZZ PROC			; SimpleMysql::query, COMDAT
; Line 17
	push	ebp
	mov	ebp, esp
	sub	esp, 1240				; 000004d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1240]
	mov	ecx, 310				; 00000136H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 20
	lea	eax, DWORD PTR _query_s$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 21
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _query_s$[ebp]
	push	ecx
	lea	edx, DWORD PTR _query$[ebp]
	push	edx
	call	??$vsprintf_s@$0EAA@@@YAHAAY0EAA@DPBDPAD@Z ; vsprintf_s<1024>
	add	esp, 12					; 0000000cH
; Line 22
	mov	DWORD PTR _ap$[ebp], 0
; Line 23
	lea	eax, DWORD PTR _query$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_mysql_query@8
	test	eax, eax
	je	SHORT $LN2@query
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_mysql_error@4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BA@NJJABCMP@MySQL?9Erro?3?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 25
	call	?finish@@YAXXZ				; finish
$LN2@query:
; Line 27
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@query
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1240				; 000004d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@query:
	DD	1
	DD	$LN5@query
$LN5@query:
	DD	-1032					; fffffbf8H
	DD	1024					; 00000400H
	DD	$LN4@query
$LN4@query:
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
?query@SimpleMysql@@QAAXPBDZZ ENDP			; SimpleMysql::query
_TEXT	ENDS
PUBLIC	??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@		; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?query_multiresult@SimpleMysql@@QAA_NPADPBD1ZZ	; SimpleMysql::query_multiresult
EXTRN	_mysql_free_result@4:PROC
EXTRN	_strlen:PROC
EXTRN	_strcat:PROC
EXTRN	_mysql_num_fields@4:PROC
EXTRN	_mysql_fetch_lengths@4:PROC
EXTRN	_mysql_fetch_row@4:PROC
EXTRN	_strcpy:PROC
EXTRN	_mysql_use_result@4:PROC
;	COMDAT ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
CONST	SEGMENT
??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@ DB '(null)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?query_multiresult@SimpleMysql@@QAA_NPADPBD1ZZ
_TEXT	SEGMENT
_i$88264 = -1116					; size = 4
_num_field$88262 = -1104				; size = 4
_returnvalue$ = -1089					; size = 1
_fetch_lenghts$ = -1080					; size = 4
_row$ = -1068						; size = 4
_res$ = -1056						; size = 4
_ap$ = -1044						; size = 4
_query$ = -1032						; size = 1024
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_result$ = 12						; size = 4
_separator$ = 16					; size = 4
_query_s$ = 20						; size = 4
?query_multiresult@SimpleMysql@@QAA_NPADPBD1ZZ PROC	; SimpleMysql::query_multiresult, COMDAT
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 1312				; 00000520H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1312]
	mov	ecx, 328				; 00000148H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 32
	lea	eax, DWORD PTR _query_s$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 33
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _query_s$[ebp]
	push	ecx
	lea	edx, DWORD PTR _query$[ebp]
	push	edx
	call	??$vsprintf_s@$0EAA@@@YAHAAY0EAA@DPBDPAD@Z ; vsprintf_s<1024>
	add	esp, 12					; 0000000cH
; Line 34
	mov	DWORD PTR _ap$[ebp], 0
; Line 35
	lea	eax, DWORD PTR _query$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_mysql_query@8
	test	eax, eax
	je	SHORT $LN9@query_mult
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_mysql_error@4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BA@NJJABCMP@MySQL?9Erro?3?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	call	?finish@@YAXXZ				; finish
$LN9@query_mult:
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_mysql_use_result@4
	mov	DWORD PTR _res$[ebp], eax
; Line 42
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 43
	mov	BYTE PTR _returnvalue$[ebp], 0
$LN8@query_mult:
; Line 44
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_mysql_fetch_row@4
	mov	DWORD PTR _row$[ebp], eax
	cmp	DWORD PTR _row$[ebp], 0
	je	$LN7@query_mult
; Line 45
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_mysql_fetch_lengths@4
	mov	DWORD PTR _fetch_lenghts$[ebp], eax
; Line 46
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_mysql_num_fields@4
	mov	DWORD PTR _num_field$88262[ebp], eax
; Line 47
	cmp	DWORD PTR _num_field$88262[ebp], 1
	jl	$LN6@query_mult
; Line 48
	mov	DWORD PTR _i$88264[ebp], 0
	jmp	SHORT $LN5@query_mult
$LN4@query_mult:
	mov	eax, DWORD PTR _i$88264[ebp]
	add	eax, 1
	mov	DWORD PTR _i$88264[ebp], eax
$LN5@query_mult:
	mov	eax, DWORD PTR _i$88264[ebp]
	cmp	eax, DWORD PTR _num_field$88262[ebp]
	jge	SHORT $LN3@query_mult
; Line 49
	mov	eax, DWORD PTR _i$88264[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	jne	SHORT $LN2@query_mult
; Line 50
	push	OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 51
	jmp	SHORT $LN1@query_mult
$LN2@query_mult:
; Line 52
	mov	eax, DWORD PTR _i$88264[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN1@query_mult:
; Line 53
	mov	eax, DWORD PTR _separator$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 54
	jmp	SHORT $LN4@query_mult
$LN3@query_mult:
; Line 55
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _separator$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	sub	esi, eax
	mov	edx, DWORD PTR _result$[ebp]
	mov	BYTE PTR [edx+esi], 0
; Line 56
	mov	BYTE PTR _returnvalue$[ebp], 1
$LN6@query_mult:
; Line 58
	jmp	$LN8@query_mult
$LN7@query_mult:
; Line 59
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_mysql_free_result@4
; Line 60
	mov	al, BYTE PTR _returnvalue$[ebp]
; Line 61
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@query_mult
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1312				; 00000520H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@query_mult:
	DD	1
	DD	$LN13@query_mult
$LN13@query_mult:
	DD	-1032					; fffffbf8H
	DD	1024					; 00000400H
	DD	$LN12@query_mult
$LN12@query_mult:
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
?query_multiresult@SimpleMysql@@QAA_NPADPBD1ZZ ENDP	; SimpleMysql::query_multiresult
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?query_result@SimpleMysql@@QAA_NPADPBDZZ	; SimpleMysql::query_result
EXTRN	__imp__strncpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?query_result@SimpleMysql@@QAA_NPADPBDZZ
_TEXT	SEGMENT
_fetch_lenghts$ = -1092					; size = 4
_returnval$ = -1077					; size = 1
_row$ = -1068						; size = 4
_res$ = -1056						; size = 4
_ap$ = -1044						; size = 4
_query$ = -1032						; size = 1024
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_result$ = 12						; size = 4
_query_s$ = 16						; size = 4
?query_result@SimpleMysql@@QAA_NPADPBDZZ PROC		; SimpleMysql::query_result, COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 1288				; 00000508H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1288]
	mov	ecx, 322				; 00000142H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 66
	lea	eax, DWORD PTR _query_s$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 67
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _query_s$[ebp]
	push	ecx
	lea	edx, DWORD PTR _query$[ebp]
	push	edx
	call	??$vsprintf_s@$0EAA@@@YAHAAY0EAA@DPBDPAD@Z ; vsprintf_s<1024>
	add	esp, 12					; 0000000cH
; Line 68
	mov	DWORD PTR _ap$[ebp], 0
; Line 69
	lea	eax, DWORD PTR _query$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_mysql_query@8
	test	eax, eax
	je	SHORT $LN3@query_resu
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_mysql_error@4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BA@NJJABCMP@MySQL?9Erro?3?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 71
	call	?finish@@YAXXZ				; finish
$LN3@query_resu:
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_mysql_use_result@4
	mov	DWORD PTR _res$[ebp], eax
; Line 75
	mov	BYTE PTR _returnval$[ebp], 0
$LN2@query_resu:
; Line 77
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_mysql_fetch_row@4
	mov	DWORD PTR _row$[ebp], eax
	cmp	DWORD PTR _row$[ebp], 0
	je	SHORT $LN1@query_resu
; Line 78
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_mysql_fetch_lengths@4
	mov	DWORD PTR _fetch_lenghts$[ebp], eax
; Line 79
	mov	eax, DWORD PTR _fetch_lenghts$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _row$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 80
	mov	BYTE PTR _returnval$[ebp], 1
; Line 81
	jmp	SHORT $LN1@query_resu
; Line 82
	jmp	SHORT $LN2@query_resu
$LN1@query_resu:
; Line 83
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	_mysql_free_result@4
; Line 84
	mov	al, BYTE PTR _returnval$[ebp]
; Line 85
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@query_resu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1288				; 00000508H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@query_resu:
	DD	1
	DD	$LN7@query_resu
$LN7@query_resu:
	DD	-1032					; fffffbf8H
	DD	1024					; 00000400H
	DD	$LN6@query_resu
$LN6@query_resu:
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
?query_result@SimpleMysql@@QAA_NPADPBDZZ ENDP		; SimpleMysql::query_result
_TEXT	ENDS
PUBLIC	?init@SimpleMysql@@QAEXXZ			; SimpleMysql::init
EXTRN	_mysql_init@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?init@SimpleMysql@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?init@SimpleMysql@@QAEXXZ PROC				; SimpleMysql::init, COMDAT
; _this$ = ecx
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_mysql_init@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?init@SimpleMysql@@QAEXXZ ENDP				; SimpleMysql::init
_TEXT	ENDS
PUBLIC	?close@SimpleMysql@@QAEXXZ			; SimpleMysql::close
EXTRN	_mysql_close@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?close@SimpleMysql@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?close@SimpleMysql@@QAEXXZ PROC				; SimpleMysql::close, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_mysql_close@4
; Line 93
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?close@SimpleMysql@@QAEXXZ ENDP				; SimpleMysql::close
_TEXT	ENDS
PUBLIC	?connect@SimpleMysql@@QAEXPAD000H@Z		; SimpleMysql::connect
EXTRN	_mysql_real_connect@32:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?connect@SimpleMysql@@QAEXPAD000H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_addr_s$ = 8						; size = 4
_user_s$ = 12						; size = 4
_pass_s$ = 16						; size = 4
_database_s$ = 20					; size = 4
_port_i$ = 24						; size = 4
?connect@SimpleMysql@@QAEXPAD000H@Z PROC		; SimpleMysql::connect, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	push	0
	push	0
	mov	eax, DWORD PTR _port_i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _database_s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pass_s$[ebp]
	push	edx
	mov	eax, DWORD PTR _user_s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _addr_s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_mysql_real_connect@32
	test	eax, eax
	jne	SHORT $LN2@connect
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_mysql_error@4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BA@NJJABCMP@MySQL?9Erro?3?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 98
	call	?finish@@YAXXZ				; finish
$LN2@connect:
; Line 101
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?connect@SimpleMysql@@QAEXPAD000H@Z ENDP		; SimpleMysql::connect
_TEXT	ENDS
PUBLIC	?client_setupmap@@YAXHH@Z			; client_setupmap
PUBLIC	?setupmap@Client@@AAEXH@Z			; Client::setupmap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setupmap@Client@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_tmapid$ = 8						; size = 4
?setupmap@Client@@AAEXH@Z PROC				; Client::setupmap, COMDAT
; _this$ = ecx
; File l:\projetos\rpgxp\phlc netplay\phlcserver\phlcserver\client.cpp
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+60], 0
	jg	SHORT $LN1@setupmap
	jmp	SHORT $LN2@setupmap
$LN1@setupmap:
; Line 97
	mov	eax, DWORD PTR _tmapid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?client_setupmap@@YAXHH@Z		; client_setupmap
	add	esp, 8
$LN2@setupmap:
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setupmap@Client@@AAEXH@Z ENDP				; Client::setupmap
_TEXT	ENDS
PUBLIC	?logoff@Client@@AAEXXZ				; Client::logoff
PUBLIC	?connect@Client@@QAEXHI@Z			; Client::connect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?connect@Client@@QAEXHI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_niCid$ = 8						; size = 4
_nhSockt$ = 12						; size = 4
?connect@Client@@QAEXHI@Z PROC				; Client::connect, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _niCid$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nhSockt$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+169], 1
; Line 105
	mov	ecx, DWORD PTR _this$[ebp]
	call	?logoff@Client@@AAEXXZ			; Client::logoff
; Line 106
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?connect@Client@@QAEXHI@Z ENDP				; Client::connect
_TEXT	ENDS
PUBLIC	?addrupdate@Client@@QAEXXZ			; Client::addrupdate
EXTRN	_inet_ntop@16:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addrupdate@Client@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?addrupdate@Client@@QAEXXZ PROC				; Client::addrupdate, COMDAT
; _this$ = ecx
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+169]
	cmp	ecx, 1
	je	SHORT $LN1@addrupdate
	jmp	SHORT $LN2@addrupdate
$LN1@addrupdate:
; Line 113
	push	32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	push	2
	call	_inet_ntop@16
$LN2@addrupdate:
; Line 115
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?addrupdate@Client@@QAEXXZ ENDP				; Client::addrupdate
_TEXT	ENDS
PUBLIC	?disconect@Client@@QAEXXZ			; Client::disconect
EXTRN	__imp__closesocket@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?disconect@Client@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?disconect@Client@@QAEXXZ PROC				; Client::disconect, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+169]
	cmp	ecx, 1
	jne	SHORT $LN2@disconect
; Line 119
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+169], 0
; Line 120
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@disconect:
; Line 122
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?disconect@Client@@QAEXXZ ENDP				; Client::disconect
_TEXT	ENDS
PUBLIC	??_C@_0CA@GGNFMFKC@Cliente?5IP?5?$CFs?5logou?5como?5?$CC?$CFs?$CC?4?6?$AA@ ; `string'
PUBLIC	??_C@_07LDNOEOLJ@L?$AB?$CFi?$AB?$CFi?$AA@	; `string'
PUBLIC	??$strcpy_s@$0CB@@@YAHAAY0CB@DPBD@Z		; strcpy_s<33>
PUBLIC	??_C@_0CL@MCGFBIKB@SELECT?5type?5FROM?5users?5WHERE?5log@ ; `string'
PUBLIC	??_C@_0DL@EMAMAJCE@Cliente?5IP?5?$CFs?5tentou?5logar?5como?5@ ; `string'
PUBLIC	?sendmsg@Client@@QAAXPADZZ			; Client::sendmsg
PUBLIC	??_C@_03COJBPHLO@L?$AB?9?$AA@			; `string'
PUBLIC	?debug_printf@@YAXPADZZ				; debug_printf
PUBLIC	??_C@_0BN@KKDGDGMC@Cliente?5IP?5?$CFs?5registrou?9se?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0DB@OGMNBMCE@SELECT?5login_id?5FROM?5users?5WHERE@ ; `string'
PUBLIC	??_C@_0DL@INNPDJIO@INSERT?5INTO?5users?$CIlogin_name?0log@ ; `string'
PUBLIC	??_C@_0DD@HAPCNBDI@SELECT?5login_pass?5FROM?5users?5WHE@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?login@Client@@AAEXPAD0@Z			; Client::login
EXTRN	_strcmp:PROC
EXTRN	__imp__atoi:PROC
;	COMDAT ??_C@_0CA@GGNFMFKC@Cliente?5IP?5?$CFs?5logou?5como?5?$CC?$CFs?$CC?4?6?$AA@
CONST	SEGMENT
??_C@_0CA@GGNFMFKC@Cliente?5IP?5?$CFs?5logou?5como?5?$CC?$CFs?$CC?4?6?$AA@ DB 'C'
	DB	'liente IP %s logou como "%s".', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LDNOEOLJ@L?$AB?$CFi?$AB?$CFi?$AA@
CONST	SEGMENT
??_C@_07LDNOEOLJ@L?$AB?$CFi?$AB?$CFi?$AA@ DB 'L', 01H, '%i', 01H, '%i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@MCGFBIKB@SELECT?5type?5FROM?5users?5WHERE?5log@
CONST	SEGMENT
??_C@_0CL@MCGFBIKB@SELECT?5type?5FROM?5users?5WHERE?5log@ DB 'SELECT type'
	DB	' FROM users WHERE login_id="%i"', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@EMAMAJCE@Cliente?5IP?5?$CFs?5tentou?5logar?5como?5@
CONST	SEGMENT
??_C@_0DL@EMAMAJCE@Cliente?5IP?5?$CFs?5tentou?5logar?5como?5@ DB 'Cliente'
	DB	' IP %s tentou logar como "%s" usando a senha "%s".', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03COJBPHLO@L?$AB?9?$AA@
CONST	SEGMENT
??_C@_03COJBPHLO@L?$AB?9?$AA@ DB 'L', 01H, '-', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KKDGDGMC@Cliente?5IP?5?$CFs?5registrou?9se?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BN@KKDGDGMC@Cliente?5IP?5?$CFs?5registrou?9se?$CB?6?$AA@ DB 'Clien'
	DB	'te IP %s registrou-se!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@OGMNBMCE@SELECT?5login_id?5FROM?5users?5WHERE@
CONST	SEGMENT
??_C@_0DB@OGMNBMCE@SELECT?5login_id?5FROM?5users?5WHERE@ DB 'SELECT login'
	DB	'_id FROM users WHERE login_name="%s"', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@INNPDJIO@INSERT?5INTO?5users?$CIlogin_name?0log@
CONST	SEGMENT
??_C@_0DL@INNPDJIO@INSERT?5INTO?5users?$CIlogin_name?0log@ DB 'INSERT INT'
	DB	'O users(login_name,login_pass) VALUES("%s","%s")', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@HAPCNBDI@SELECT?5login_pass?5FROM?5users?5WHE@
CONST	SEGMENT
??_C@_0DD@HAPCNBDI@SELECT?5login_pass?5FROM?5users?5WHE@ DB 'SELECT login'
	DB	'_pass FROM users WHERE login_name="%s"', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?login@Client@@AAEXPAD0@Z
_TEXT	SEGMENT
_type$88428 = -112					; size = 2
_lid$88427 = -100					; size = 5
_lid$88419 = -84					; size = 5
_exist$ = -65						; size = 1
_upass$ = -56						; size = 33
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_tusername$ = 8						; size = 4
_tpassword$ = 12					; size = 4
?login@Client@@AAEXPAD0@Z PROC				; Client::login, COMDAT
; _this$ = ecx
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 126
	mov	eax, DWORD PTR _tusername$[ebp]
	push	eax
	push	OFFSET ??_C@_0DD@HAPCNBDI@SELECT?5login_pass?5FROM?5users?5WHE@
	lea	ecx, DWORD PTR _upass$[ebp]
	push	ecx
	push	OFFSET ?smysql@@3VSimpleMysql@@A	; smysql
	call	?query_result@SimpleMysql@@QAA_NPADPBDZZ ; SimpleMysql::query_result
	add	esp, 16					; 00000010H
	mov	BYTE PTR _exist$[ebp], al
; Line 127
	movzx	eax, BYTE PTR _exist$[ebp]
	test	eax, eax
	jne	SHORT $LN4@login
; Line 128
	mov	eax, DWORD PTR _tpassword$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tusername$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DL@INNPDJIO@INSERT?5INTO?5users?$CIlogin_name?0log@
	push	OFFSET ?smysql@@3VSimpleMysql@@A	; smysql
	call	?query@SimpleMysql@@QAAXPBDZZ		; SimpleMysql::query
	add	esp, 16					; 00000010H
; Line 130
	mov	eax, DWORD PTR _tusername$[ebp]
	push	eax
	push	OFFSET ??_C@_0DB@OGMNBMCE@SELECT?5login_id?5FROM?5users?5WHERE@
	lea	ecx, DWORD PTR _lid$88419[ebp]
	push	ecx
	push	OFFSET ?smysql@@3VSimpleMysql@@A	; smysql
	call	?query_result@SimpleMysql@@QAA_NPADPBDZZ ; SimpleMysql::query_result
	add	esp, 16					; 00000010H
; Line 131
	mov	esi, esp
	lea	eax, DWORD PTR _lid$88419[ebp]
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	push	OFFSET ??_C@_0BN@KKDGDGMC@Cliente?5IP?5?$CFs?5registrou?9se?$CB?6?$AA@
	call	?debug_printf@@YAXPADZZ			; debug_printf
	add	esp, 8
	jmp	$LN3@login
$LN4@login:
; Line 134
	mov	eax, DWORD PTR _tpassword$[ebp]
	push	eax
	lea	ecx, DWORD PTR _upass$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@login
; Line 135
	push	OFFSET ??_C@_03COJBPHLO@L?$AB?9?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?sendmsg@Client@@QAAXPADZZ		; Client::sendmsg
	add	esp, 8
; Line 136
	mov	eax, DWORD PTR _tpassword$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tusername$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 44					; 0000002cH
	push	edx
	push	OFFSET ??_C@_0DL@EMAMAJCE@Cliente?5IP?5?$CFs?5tentou?5logar?5como?5@
	call	?debug_printf@@YAXPADZZ			; debug_printf
	add	esp, 16					; 00000010H
; Line 137
	jmp	$LN5@login
; Line 138
	jmp	SHORT $LN3@login
$LN2@login:
; Line 140
	mov	eax, DWORD PTR _tusername$[ebp]
	push	eax
	push	OFFSET ??_C@_0DB@OGMNBMCE@SELECT?5login_id?5FROM?5users?5WHERE@
	lea	ecx, DWORD PTR _lid$88427[ebp]
	push	ecx
	push	OFFSET ?smysql@@3VSimpleMysql@@A	; smysql
	call	?query_result@SimpleMysql@@QAA_NPADPBDZZ ; SimpleMysql::query_result
	add	esp, 16					; 00000010H
; Line 141
	mov	esi, esp
	lea	eax, DWORD PTR _lid$88427[ebp]
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	OFFSET ??_C@_0CL@MCGFBIKB@SELECT?5type?5FROM?5users?5WHERE?5log@
	lea	edx, DWORD PTR _type$88428[ebp]
	push	edx
	push	OFFSET ?smysql@@3VSimpleMysql@@A	; smysql
	call	?query_result@SimpleMysql@@QAA_NPADPBDZZ ; SimpleMysql::query_result
	add	esp, 16					; 00000010H
; Line 144
	mov	esi, esp
	lea	eax, DWORD PTR _type$88428[ebp]
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN3@login:
; Line 146
	mov	eax, DWORD PTR _tusername$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 170				; 000000aaH
	push	ecx
	call	??$strcpy_s@$0CB@@@YAHAAY0CB@DPBD@Z	; strcpy_s<33>
	add	esp, 8
; Line 147
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+168], 1
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET ??_C@_07LDNOEOLJ@L?$AB?$CFi?$AB?$CFi?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?sendmsg@Client@@QAAXPADZZ		; Client::sendmsg
	add	esp, 16					; 00000010H
; Line 149
	mov	eax, DWORD PTR _tusername$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	push	OFFSET ??_C@_0CA@GGNFMFKC@Cliente?5IP?5?$CFs?5logou?5como?5?$CC?$CFs?$CC?4?6?$AA@
	call	?debug_printf@@YAXPADZZ			; debug_printf
	add	esp, 12					; 0000000cH
$LN5@login:
; Line 150
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@login
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN12@login:
	DD	4
	DD	$LN11@login
$LN11@login:
	DD	-56					; ffffffc8H
	DD	33					; 00000021H
	DD	$LN7@login
	DD	-84					; ffffffacH
	DD	5
	DD	$LN8@login
	DD	-100					; ffffff9cH
	DD	5
	DD	$LN9@login
	DD	-112					; ffffff90H
	DD	2
	DD	$LN10@login
$LN10@login:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN9@login:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN8@login:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	0
$LN7@login:
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
?login@Client@@AAEXPAD0@Z ENDP				; Client::login
_TEXT	ENDS
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??$vsprintf_s@$0BAA@@@YAHAAY0BAA@DPBDPAD@Z	; vsprintf_s<256>
PUBLIC	__$ArrayPad$
EXTRN	__imp__send@16:PROC
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?sendmsg@Client@@QAAXPADZZ
_TEXT	SEGMENT
_ap$ = -276						; size = 4
_msg$ = -264						; size = 256
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_msgformat$ = 12					; size = 4
?sendmsg@Client@@QAAXPADZZ PROC				; Client::sendmsg, COMDAT
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-472]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 155
	lea	eax, DWORD PTR _msgformat$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 156
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msgformat$[ebp]
	push	ecx
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	??$vsprintf_s@$0BAA@@@YAHAAY0BAA@DPBDPAD@Z ; vsprintf_s<256>
	add	esp, 12					; 0000000cH
; Line 157
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 158
	mov	DWORD PTR _ap$[ebp], 0
; Line 159
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 160
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@sendmsg
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 472				; 000001d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@sendmsg:
	DD	1
	DD	$LN4@sendmsg
$LN4@sendmsg:
	DD	-264					; fffffef8H
	DD	256					; 00000100H
	DD	$LN3@sendmsg
$LN3@sendmsg:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
?sendmsg@Client@@QAAXPADZZ ENDP				; Client::sendmsg
_TEXT	ENDS
PUBLIC	??$strcpy_s@$0M@@@YAHAAY0M@DPBD@Z		; strcpy_s<12>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?logoff@Client@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?logoff@Client@@AAEXXZ PROC				; Client::logoff, COMDAT
; _this$ = ecx
; Line 162
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+168], 0
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+136], 0
; Line 167
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 203				; 000000cbH
	push	eax
	call	??$strcpy_s@$0M@@@YAHAAY0M@DPBD@Z	; strcpy_s<12>
	add	esp, 8
; Line 168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?logoff@Client@@AAEXXZ ENDP				; Client::logoff
_TEXT	ENDS
PUBLIC	??_C@_06GAECNOIL@?$CG?$AB?$CFi?$AB?$AD?$AA@	; `string'
PUBLIC	??_C@_07ECNIAIBB@?$CG?$AB?$CFi?$AB?$CFs?$AA@	; `string'
PUBLIC	??_C@_01IMBAIPIC@?$AC?$AA@			; `string'
PUBLIC	??_C@_0GK@MMCNEBEP@SELECT?5char_nick?0?5char_genre?0?5ch@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?send_char_list@Client@@AAEXH@Z			; Client::send_char_list
;	COMDAT ??_C@_06GAECNOIL@?$CG?$AB?$CFi?$AB?$AD?$AA@
CONST	SEGMENT
??_C@_06GAECNOIL@?$CG?$AB?$CFi?$AB?$AD?$AA@ DB '&', 01H, '%i', 01H, 03H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07ECNIAIBB@?$CG?$AB?$CFi?$AB?$CFs?$AA@
CONST	SEGMENT
??_C@_07ECNIAIBB@?$CG?$AB?$CFi?$AB?$CFs?$AA@ DB '&', 01H, '%i', 01H, '%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01IMBAIPIC@?$AC?$AA@
CONST	SEGMENT
??_C@_01IMBAIPIC@?$AC?$AA@ DB 02H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@MMCNEBEP@SELECT?5char_nick?0?5char_genre?0?5ch@
CONST	SEGMENT
??_C@_0GK@MMCNEBEP@SELECT?5char_nick?0?5char_genre?0?5ch@ DB 'SELECT char'
	DB	'_nick, char_genre, char_class, char_equiped FROM chars WHERE '
	DB	'char_owner=''%i'' AND char_num=''%i''', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?send_char_list@Client@@AAEXH@Z
_TEXT	SEGMENT
_i$88468 = -1056					; size = 4
_result$ = -1044					; size = 1024
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_max$ = 8						; size = 4
?send_char_list@Client@@AAEXH@Z PROC			; Client::send_char_list, COMDAT
; _this$ = ecx
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 1252				; 000004e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1252]
	mov	ecx, 313				; 00000139H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	DWORD PTR _i$88468[ebp], 0
	jmp	SHORT $LN5@send_char_
$LN4@send_char_:
	mov	eax, DWORD PTR _i$88468[ebp]
	add	eax, 1
	mov	DWORD PTR _i$88468[ebp], eax
$LN5@send_char_:
	mov	eax, DWORD PTR _i$88468[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jge	SHORT $LN6@send_char_
; Line 173
	mov	eax, DWORD PTR _i$88468[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	OFFSET ??_C@_0GK@MMCNEBEP@SELECT?5char_nick?0?5char_genre?0?5ch@
	push	OFFSET ??_C@_01IMBAIPIC@?$AC?$AA@
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	push	OFFSET ?smysql@@3VSimpleMysql@@A	; smysql
	call	?query_multiresult@SimpleMysql@@QAA_NPADPBD1ZZ ; SimpleMysql::query_multiresult
	add	esp, 24					; 00000018H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@send_char_
; Line 174
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$88468[ebp]
	push	ecx
	push	OFFSET ??_C@_07ECNIAIBB@?$CG?$AB?$CFi?$AB?$CFs?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?sendmsg@Client@@QAAXPADZZ		; Client::sendmsg
	add	esp, 16					; 00000010H
; Line 175
	jmp	SHORT $LN1@send_char_
$LN2@send_char_:
; Line 176
	mov	eax, DWORD PTR _i$88468[ebp]
	push	eax
	push	OFFSET ??_C@_06GAECNOIL@?$CG?$AB?$CFi?$AB?$AD?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?sendmsg@Client@@QAAXPADZZ		; Client::sendmsg
	add	esp, 12					; 0000000cH
$LN1@send_char_:
; Line 177
	jmp	$LN4@send_char_
$LN6@send_char_:
; Line 178
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@send_char_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1252				; 000004e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@send_char_:
	DD	1
	DD	$LN9@send_char_
$LN9@send_char_:
	DD	-1044					; fffffbecH
	DD	1024					; 00000400H
	DD	$LN8@send_char_
$LN8@send_char_:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?send_char_list@Client@@AAEXH@Z ENDP			; Client::send_char_list
_TEXT	ENDS
PUBLIC	??_C@_0DL@IJBPALCB@Mensagem?5desconhecida?5recebida?5d@ ; `string'
PUBLIC	??_C@_0O@BBKLHCIN@M?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@ ; `string'
PUBLIC	?sendmap@@YAXHHPADZZ				; sendmap
PUBLIC	??_C@_0L@DGJFLEDE@M?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@ ; `string'
PUBLIC	??_C@_07HPHEEOCH@M?$AB?$CFi?$AB?$CFi?$AA@	; `string'
PUBLIC	??_C@_0O@DHELAKOO@C?$AB?$CFi?$AB?$CFs?$AB?$CFi?$AB?$CFi?$AA@ ; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_04BEILBJPL@C?$AB?$CFi?$AA@		; `string'
PUBLIC	??_C@_04EFFJOBMG@?$CG?$AB?$CFi?$AA@		; `string'
PUBLIC	??_C@_0L@FDPHDNPI@P?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@ ; `string'
PUBLIC	??_C@_0N@ENHAIONI@L?$AB?$CF?$FL?$FO?8?$AB?8?$FN?$AB?$CFs?$AA@ ; `string'
PUBLIC	??_C@_07GCENIOCL@?$CB?$AB?$CFs?$AB?$CFs?$AA@	; `string'
PUBLIC	??_C@_03PBDDOHNJ@0?42?$AA@			; `string'
PUBLIC	??_C@_0DA@MILNMLEG@Cliente?5IP?5?$CFs?5recebeu?5a?5politica@ ; `string'
PUBLIC	??_C@_01KJLJFBPL@8?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?received@Client@@QAEXPAD@Z			; Client::received
EXTRN	__imp__sscanf:PROC
EXTRN	__RTC_UninitUse:PROC
;	COMDAT ??_C@_0DL@IJBPALCB@Mensagem?5desconhecida?5recebida?5d@
CONST	SEGMENT
??_C@_0DL@IJBPALCB@Mensagem?5desconhecida?5recebida?5d@ DB 'Mensagem desc'
	DB	'onhecida recebida de %s:', 0aH, '%s', 0aH, '*Fim da mensagem', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BBKLHCIN@M?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@
CONST	SEGMENT
??_C@_0O@BBKLHCIN@M?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@ DB 'M', 01H, '%'
	DB	'i', 01H, '%i', 01H, '%i', 01H, '%i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DGJFLEDE@M?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@
CONST	SEGMENT
??_C@_0L@DGJFLEDE@M?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@ DB 'M', 01H, '%i', 01H
	DB	'%i', 01H, '%i', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07HPHEEOCH@M?$AB?$CFi?$AB?$CFi?$AA@
CONST	SEGMENT
??_C@_07HPHEEOCH@M?$AB?$CFi?$AB?$CFi?$AA@ DB 'M', 01H, '%i', 01H, '%i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DHELAKOO@C?$AB?$CFi?$AB?$CFs?$AB?$CFi?$AB?$CFi?$AA@
CONST	SEGMENT
??_C@_0O@DHELAKOO@C?$AB?$CFi?$AB?$CFs?$AB?$CFi?$AB?$CFi?$AA@ DB 'C', 01H, '%'
	DB	'i', 01H, '%s', 01H, '%i', 01H, '%i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BEILBJPL@C?$AB?$CFi?$AA@
CONST	SEGMENT
??_C@_04BEILBJPL@C?$AB?$CFi?$AA@ DB 'C', 01H, '%i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04EFFJOBMG@?$CG?$AB?$CFi?$AA@
CONST	SEGMENT
??_C@_04EFFJOBMG@?$CG?$AB?$CFi?$AA@ DB '&', 01H, '%i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FDPHDNPI@P?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@
CONST	SEGMENT
??_C@_0L@FDPHDNPI@P?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@ DB 'P', 01H, '%i', 01H
	DB	'%i', 01H, '%i', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENHAIONI@L?$AB?$CF?$FL?$FO?8?$AB?8?$FN?$AB?$CFs?$AA@
CONST	SEGMENT
??_C@_0N@ENHAIONI@L?$AB?$CF?$FL?$FO?8?$AB?8?$FN?$AB?$CFs?$AA@ DB 'L', 01H
	DB	'%[^''', 01H, ''']', 01H, '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GCENIOCL@?$CB?$AB?$CFs?$AB?$CFs?$AA@
CONST	SEGMENT
??_C@_07GCENIOCL@?$CB?$AB?$CFs?$AB?$CFs?$AA@ DB '!', 01H, '%s', 01H, '%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03PBDDOHNJ@0?42?$AA@
CONST	SEGMENT
??_C@_03PBDDOHNJ@0?42?$AA@ DB '0.2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@MILNMLEG@Cliente?5IP?5?$CFs?5recebeu?5a?5politica@
CONST	SEGMENT
??_C@_0DA@MILNMLEG@Cliente?5IP?5?$CFs?5recebeu?5a?5politica@ DB 'Cliente '
	DB	'IP %s recebeu a politica de seguran', 0e7H, 'a.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KJLJFBPL@8?$AA@
CONST	SEGMENT
??_C@_01KJLJFBPL@8?$AA@ DB '8', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?received@Client@@QAEXPAD@Z
_TEXT	SEGMENT
tv184 = -444						; size = 4
tv157 = -444						; size = 4
tv65 = -444						; size = 4
$T95411 = -433						; size = 1
$T95412 = -421						; size = 1
$T95413 = -409						; size = 1
_movarg2$88517 = -208					; size = 4
_movarg1$88516 = -196					; size = 4
_movtype$88515 = -184					; size = 4
_tchar_name$88512 = -172				; size = 4
_tchar_genre$88511 = -160				; size = 4
_tchar_class$88510 = -148				; size = 4
_t2char_num$88509 = -136				; size = 4
_tchar_num$88505 = -124					; size = 4
_max$88502 = -112					; size = 4
_tpassword$88497 = -100					; size = 33
_tusername$88496 = -56					; size = 33
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_packet$ = 8						; size = 4
?received@Client@@QAEXPAD@Z PROC			; Client::received, COMDAT
; _this$ = ecx
; Line 180
	push	ebp
	mov	ebp, esp
	sub	esp, 444				; 000001bcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-444]
	mov	ecx, 111				; 0000006fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 181
	mov	eax, DWORD PTR _packet$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	DWORD PTR tv65[ebp], ecx
	mov	edx, DWORD PTR tv65[ebp]
	sub	edx, 33					; 00000021H
	mov	DWORD PTR tv65[ebp], edx
	cmp	DWORD PTR tv65[ebp], 47			; 0000002fH
	ja	$LN1@received
	mov	eax, DWORD PTR tv65[ebp]
	movzx	ecx, BYTE PTR $LN53@received[eax]
	jmp	DWORD PTR $LN64@received[ecx*4]
	mov	BYTE PTR $T95413[ebp], 0
	mov	BYTE PTR $T95412[ebp], 0
	mov	BYTE PTR $T95411[ebp], 0
$LN24@received:
; Line 183
	push	OFFSET ??_C@_01KJLJFBPL@8?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?sendmsg@Client@@QAAXPADZZ		; Client::sendmsg
	add	esp, 8
; Line 184
	jmp	$LN27@received
$LN23@received:
; Line 186
	mov	esi, esp
	push	0
	push	OFFSET ?crossdomain@@3PADA		; crossdomain
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	push	OFFSET ?crossdomain@@3PADA		; crossdomain
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 187
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	push	OFFSET ??_C@_0DA@MILNMLEG@Cliente?5IP?5?$CFs?5recebeu?5a?5politica@
	call	?debug_printf@@YAXPADZZ			; debug_printf
	add	esp, 8
; Line 188
	jmp	$LN27@received
$LN22@received:
; Line 190
	push	OFFSET ??_C@_03PBDDOHNJ@0?42?$AA@
	push	OFFSET ?msgs_motd@@3PADA		; msgs_motd
	push	OFFSET ??_C@_07GCENIOCL@?$CB?$AB?$CFs?$AB?$CFs?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?sendmsg@Client@@QAAXPADZZ		; Client::sendmsg
	add	esp, 16					; 00000010H
; Line 191
	jmp	$LN27@received
$LN21@received:
; Line 193
	mov	eax, DWORD PTR _packet$[ebp]
	movsx	ecx, BYTE PTR [eax+3]
	cmp	ecx, 35					; 00000023H
	jne	SHORT $LN20@received
	mov	ecx, DWORD PTR _this$[ebp]
	call	?logoff@Client@@AAEXXZ			; Client::logoff
; Line 194
	jmp	SHORT $LN19@received
$LN20@received:
; Line 196
	mov	esi, esp
	lea	eax, DWORD PTR _tpassword$88497[ebp]
	push	eax
	lea	ecx, DWORD PTR _tusername$88496[ebp]
	push	ecx
	push	OFFSET ??_C@_0N@ENHAIONI@L?$AB?$CF?$FL?$FO?8?$AB?8?$FN?$AB?$CFs?$AA@
	mov	edx, DWORD PTR _packet$[ebp]
	push	edx
	call	DWORD PTR __imp__sscanf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 197
	lea	eax, DWORD PTR _tpassword$88497[ebp]
	push	eax
	lea	ecx, DWORD PTR _tusername$88496[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?login@Client@@AAEXPAD0@Z		; Client::login
$LN19@received:
; Line 199
	jmp	$LN27@received
$LN18@received:
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 148				; 00000094H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 140				; 0000008cH
	push	edx
	push	OFFSET ??_C@_0L@FDPHDNPI@P?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	call	DWORD PTR __imp__sscanf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 202
	jmp	$LN27@received
$LN17@received:
; Line 205
	mov	esi, esp
	lea	eax, DWORD PTR _max$88502[ebp]
	push	eax
	push	OFFSET ??_C@_04EFFJOBMG@?$CG?$AB?$CFi?$AA@
	mov	ecx, DWORD PTR _packet$[ebp]
	push	ecx
	call	DWORD PTR __imp__sscanf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 206
	mov	eax, DWORD PTR _max$88502[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?send_char_list@Client@@AAEXH@Z		; Client::send_char_list
; Line 207
	jmp	$LN27@received
$LN16@received:
; Line 210
	mov	esi, esp
	lea	eax, DWORD PTR _tchar_num$88505[ebp]
	push	eax
	push	OFFSET ??_C@_04BEILBJPL@C?$AB?$CFi?$AA@
	mov	ecx, DWORD PTR _packet$[ebp]
	push	ecx
	call	DWORD PTR __imp__sscanf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 211
	mov	esi, esp
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 213
	jmp	$LN27@received
$LN15@received:
; Line 217
	mov	esi, esp
	lea	eax, DWORD PTR _tchar_class$88510[ebp]
	push	eax
	lea	ecx, DWORD PTR _tchar_genre$88511[ebp]
	push	ecx
	lea	edx, DWORD PTR _tchar_name$88512[ebp]
	push	edx
	lea	eax, DWORD PTR _t2char_num$88509[ebp]
	push	eax
	push	OFFSET ??_C@_0O@DHELAKOO@C?$AB?$CFi?$AB?$CFs?$AB?$CFi?$AB?$CFi?$AA@
	mov	ecx, DWORD PTR _packet$[ebp]
	push	ecx
	call	DWORD PTR __imp__sscanf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 218
	mov	esi, esp
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 220
	jmp	$LN27@received
$LN14@received:
; Line 223
	mov	eax, DWORD PTR _packet$[ebp]
	movsx	ecx, BYTE PTR [eax+3]
	mov	DWORD PTR tv157[ebp], ecx
	mov	edx, DWORD PTR tv157[ebp]
	sub	edx, 48					; 00000030H
	mov	DWORD PTR tv157[ebp], edx
	cmp	DWORD PTR tv157[ebp], 3
	ja	$LN12@received
	mov	eax, DWORD PTR tv157[ebp]
	jmp	DWORD PTR $LN65@received[eax*4]
$LN11@received:
; Line 225
	cmp	BYTE PTR $T95411[ebp], 0
	jne	SHORT $LN29@received
	push	OFFSET $LN30@received
	call	__RTC_UninitUse
	add	esp, 4
$LN29@received:
	cmp	BYTE PTR $T95412[ebp], 0
	jne	SHORT $LN31@received
	push	OFFSET $LN32@received
	call	__RTC_UninitUse
	add	esp, 4
$LN31@received:
	mov	esi, esp
	mov	eax, DWORD PTR _movarg1$88516[ebp]
	push	eax
	mov	ecx, DWORD PTR _movtype$88515[ebp]
	push	ecx
	push	OFFSET ??_C@_07HPHEEOCH@M?$AB?$CFi?$AB?$CFi?$AA@
	mov	edx, DWORD PTR _packet$[ebp]
	push	edx
	call	DWORD PTR __imp__sscanf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 226
	cmp	BYTE PTR $T95411[ebp], 0
	jne	SHORT $LN33@received
	push	OFFSET $LN30@received
	call	__RTC_UninitUse
	add	esp, 4
$LN33@received:
	cmp	BYTE PTR $T95412[ebp], 0
	jne	SHORT $LN34@received
	push	OFFSET $LN32@received
	call	__RTC_UninitUse
	add	esp, 4
$LN34@received:
	mov	eax, DWORD PTR _movarg1$88516[ebp]
	push	eax
	mov	ecx, DWORD PTR _movtype$88515[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET ??_C@_0L@DGJFLEDE@M?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?sendmap@@YAXHHPADZZ			; sendmap
	add	esp, 24					; 00000018H
; Line 227
	cmp	BYTE PTR $T95411[ebp], 0
	jne	SHORT $LN35@received
	push	OFFSET $LN30@received
	call	__RTC_UninitUse
	add	esp, 4
$LN35@received:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _movarg1$88516[ebp]
	mov	DWORD PTR [eax+148], ecx
; Line 228
	jmp	$LN12@received
$LN10@received:
; Line 230
	cmp	BYTE PTR $T95411[ebp], 0
	jne	SHORT $LN36@received
	push	OFFSET $LN30@received
	call	__RTC_UninitUse
	add	esp, 4
$LN36@received:
	cmp	BYTE PTR $T95412[ebp], 0
	jne	SHORT $LN37@received
	push	OFFSET $LN32@received
	call	__RTC_UninitUse
	add	esp, 4
$LN37@received:
	mov	esi, esp
	mov	eax, DWORD PTR _movarg1$88516[ebp]
	push	eax
	mov	ecx, DWORD PTR _movtype$88515[ebp]
	push	ecx
	push	OFFSET ??_C@_07HPHEEOCH@M?$AB?$CFi?$AB?$CFi?$AA@
	mov	edx, DWORD PTR _packet$[ebp]
	push	edx
	call	DWORD PTR __imp__sscanf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 231
	cmp	BYTE PTR $T95411[ebp], 0
	jne	SHORT $LN38@received
	push	OFFSET $LN30@received
	call	__RTC_UninitUse
	add	esp, 4
$LN38@received:
	cmp	BYTE PTR $T95412[ebp], 0
	jne	SHORT $LN39@received
	push	OFFSET $LN32@received
	call	__RTC_UninitUse
	add	esp, 4
$LN39@received:
	mov	eax, DWORD PTR _movarg1$88516[ebp]
	push	eax
	mov	ecx, DWORD PTR _movtype$88515[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET ??_C@_0L@DGJFLEDE@M?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?sendmap@@YAXHHPADZZ			; sendmap
	add	esp, 24					; 00000018H
; Line 232
	cmp	BYTE PTR $T95411[ebp], 0
	jne	SHORT $LN40@received
	push	OFFSET $LN30@received
	call	__RTC_UninitUse
	add	esp, 4
$LN40@received:
	mov	eax, DWORD PTR _movarg1$88516[ebp]
	mov	DWORD PTR tv184[ebp], eax
	mov	ecx, DWORD PTR tv184[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv184[ebp], ecx
	cmp	DWORD PTR tv184[ebp], 6
	ja	SHORT $LN8@received
	mov	edx, DWORD PTR tv184[ebp]
	jmp	DWORD PTR $LN66@received[edx*4]
$LN7@received:
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+144], ecx
; Line 235
	jmp	SHORT $LN8@received
$LN6@received:
; Line 237
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+140], ecx
; Line 238
	jmp	SHORT $LN8@received
$LN5@received:
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+140], ecx
; Line 241
	jmp	SHORT $LN8@received
$LN4@received:
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+144], ecx
$LN8@received:
; Line 246
	jmp	$LN12@received
$LN3@received:
; Line 248
	cmp	BYTE PTR $T95413[ebp], 0
	jne	SHORT $LN41@received
	push	OFFSET $LN42@received
	call	__RTC_UninitUse
	add	esp, 4
$LN41@received:
	cmp	BYTE PTR $T95411[ebp], 0
	jne	SHORT $LN43@received
	push	OFFSET $LN30@received
	call	__RTC_UninitUse
	add	esp, 4
$LN43@received:
	cmp	BYTE PTR $T95412[ebp], 0
	jne	SHORT $LN44@received
	push	OFFSET $LN32@received
	call	__RTC_UninitUse
	add	esp, 4
$LN44@received:
	mov	esi, esp
	mov	eax, DWORD PTR _movarg2$88517[ebp]
	push	eax
	mov	ecx, DWORD PTR _movarg1$88516[ebp]
	push	ecx
	mov	edx, DWORD PTR _movtype$88515[ebp]
	push	edx
	push	OFFSET ??_C@_0L@DGJFLEDE@M?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	call	DWORD PTR __imp__sscanf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 249
	cmp	BYTE PTR $T95413[ebp], 0
	jne	SHORT $LN45@received
	push	OFFSET $LN42@received
	call	__RTC_UninitUse
	add	esp, 4
$LN45@received:
	cmp	BYTE PTR $T95411[ebp], 0
	jne	SHORT $LN46@received
	push	OFFSET $LN30@received
	call	__RTC_UninitUse
	add	esp, 4
$LN46@received:
	cmp	BYTE PTR $T95412[ebp], 0
	jne	SHORT $LN47@received
	push	OFFSET $LN32@received
	call	__RTC_UninitUse
	add	esp, 4
$LN47@received:
	mov	eax, DWORD PTR _movarg2$88517[ebp]
	push	eax
	mov	ecx, DWORD PTR _movarg1$88516[ebp]
	push	ecx
	mov	edx, DWORD PTR _movtype$88515[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0O@BBKLHCIN@M?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+136]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?sendmap@@YAXHHPADZZ			; sendmap
	add	esp, 28					; 0000001cH
; Line 250
	cmp	BYTE PTR $T95411[ebp], 0
	jne	SHORT $LN48@received
	push	OFFSET $LN30@received
	call	__RTC_UninitUse
	add	esp, 4
$LN48@received:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	add	ecx, DWORD PTR _movarg1$88516[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+140], ecx
; Line 251
	cmp	BYTE PTR $T95413[ebp], 0
	jne	SHORT $LN49@received
	push	OFFSET $LN42@received
	call	__RTC_UninitUse
	add	esp, 4
$LN49@received:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	add	ecx, DWORD PTR _movarg2$88517[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+144], ecx
; Line 252
	jmp	$LN12@received
$LN2@received:
; Line 254
	cmp	BYTE PTR $T95411[ebp], 0
	jne	SHORT $LN50@received
	push	OFFSET $LN30@received
	call	__RTC_UninitUse
	add	esp, 4
$LN50@received:
	cmp	BYTE PTR $T95412[ebp], 0
	jne	SHORT $LN51@received
	push	OFFSET $LN32@received
	call	__RTC_UninitUse
	add	esp, 4
$LN51@received:
	mov	esi, esp
	mov	eax, DWORD PTR _movarg1$88516[ebp]
	push	eax
	mov	ecx, DWORD PTR _movtype$88515[ebp]
	push	ecx
	push	OFFSET ??_C@_07HPHEEOCH@M?$AB?$CFi?$AB?$CFi?$AA@
	mov	edx, DWORD PTR _packet$[ebp]
	push	edx
	call	DWORD PTR __imp__sscanf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 255
	cmp	BYTE PTR $T95411[ebp], 0
	jne	SHORT $LN52@received
	push	OFFSET $LN30@received
	call	__RTC_UninitUse
	add	esp, 4
$LN52@received:
	mov	eax, DWORD PTR _movarg1$88516[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?client_setupmap@@YAXHH@Z		; client_setupmap
	add	esp, 8
$LN12@received:
; Line 258
	jmp	SHORT $LN27@received
$LN1@received:
; Line 260
	mov	eax, DWORD PTR _packet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	push	OFFSET ??_C@_0DL@IJBPALCB@Mensagem?5desconhecida?5recebida?5d@
	call	?debug_printf@@YAXPADZZ			; debug_printf
	add	esp, 12					; 0000000cH
$LN27@received:
; Line 264
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN63@received
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 444				; 000001bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN63@received:
	DD	8
	DD	$LN62@received
$LN62@received:
	DD	-56					; ffffffc8H
	DD	33					; 00000021H
	DD	$LN54@received
	DD	-100					; ffffff9cH
	DD	33					; 00000021H
	DD	$LN55@received
	DD	-112					; ffffff90H
	DD	4
	DD	$LN56@received
	DD	-124					; ffffff84H
	DD	4
	DD	$LN57@received
	DD	-136					; ffffff78H
	DD	4
	DD	$LN58@received
	DD	-148					; ffffff6cH
	DD	4
	DD	$LN59@received
	DD	-160					; ffffff60H
	DD	4
	DD	$LN60@received
	DD	-172					; ffffff54H
	DD	4
	DD	$LN61@received
$LN61@received:
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN60@received:
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
$LN59@received:
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
$LN58@received:
	DB	116					; 00000074H
	DB	50					; 00000032H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN57@received:
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN56@received:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	0
$LN55@received:
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN54@received:
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN42@received:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	50					; 00000032H
	DB	0
$LN32@received:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN30@received:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	49					; 00000031H
	DB	0
$LN64@received:
	DD	$LN22@received
	DD	$LN17@received
	DD	$LN24@received
	DD	$LN23@received
	DD	$LN16@received
	DD	$LN21@received
	DD	$LN14@received
	DD	$LN15@received
	DD	$LN18@received
	DD	$LN1@received
$LN53@received:
	DB	0
	DB	9
	DB	9
	DB	9
	DB	9
	DB	1
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	2
	DB	9
	DB	9
	DB	9
	DB	3
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	4
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	5
	DB	6
	DB	7
	DB	9
	DB	8
$LN65@received:
	DD	$LN11@received
	DD	$LN10@received
	DD	$LN3@received
	DD	$LN2@received
$LN66@received:
	DD	$LN7@received
	DD	$LN8@received
	DD	$LN6@received
	DD	$LN8@received
	DD	$LN5@received
	DD	$LN8@received
	DD	$LN4@received
?received@Client@@QAEXPAD@Z ENDP			; Client::received
_TEXT	ENDS
EXTRN	__imp__vprintf:PROC
EXTRN	__imp__vfprintf:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?debug_printf@@YAXPADZZ
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_format$ = 8						; size = 4
?debug_printf@@YAXPADZZ PROC				; debug_printf, COMDAT
; File l:\projetos\rpgxp\phlc netplay\phlcserver\phlcserver\phlcserver.cpp
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 56
	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 57
	mov	esi, esp
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?pDebugFile@@3PAU_iobuf@@A ; pDebugFile
	push	edx
	call	DWORD PTR __imp__vfprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 58
	movzx	eax, BYTE PTR ?printdebug@@3_NA		; printdebug
	cmp	eax, 1
	jne	SHORT $LN1@debug_prin
	mov	esi, esp
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	DWORD PTR __imp__vprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@debug_prin:
; Line 59
	mov	DWORD PTR _ap$[ebp], 0
; Line 60
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?debug_printf@@YAXPADZZ ENDP				; debug_printf
_TEXT	ENDS
PUBLIC	??_C@_0BE@DIBLMBAH@U?$AB?$CFi?$AB?$CFs?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@ ; `string'
PUBLIC	??_C@_03KPDFKAKH@U?$AB?$CB?$AA@			; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0BE@DIBLMBAH@U?$AB?$CFi?$AB?$CFs?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@
CONST	SEGMENT
??_C@_0BE@DIBLMBAH@U?$AB?$CFi?$AB?$CFs?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@ DB 'U'
	DB	01H, '%i', 01H, '%s', 01H, '%i', 01H, '%i', 01H, '%i', 01H, '%'
	DB	'i', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_03KPDFKAKH@U?$AB?$CB?$AA@
CONST	SEGMENT
??_C@_03KPDFKAKH@U?$AB?$CB?$AA@ DB 'U', 01H, '!', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?client_setupmap@@YAXHH@Z
_TEXT	SEGMENT
_tiCid$88558 = -460					; size = 4
_iclient$ = -448					; size = 216
_thisclient$ = -224					; size = 216
__$ArrayPad$ = -4					; size = 4
_iCid$ = 8						; size = 4
_tmapid$ = 12						; size = 4
?client_setupmap@@YAXHH@Z PROC				; client_setupmap, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 656				; 00000290H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-656]
	mov	ecx, 164				; 000000a4H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 64
	mov	esi, DWORD PTR _iCid$[ebp]
	imul	esi, 216				; 000000d8H
	add	esi, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	mov	ecx, 54					; 00000036H
	lea	edi, DWORD PTR _thisclient$[ebp]
	rep movsd
; Line 65
	mov	eax, DWORD PTR _thisclient$[ebp+136]
	cmp	eax, DWORD PTR _tmapid$[ebp]
	jne	SHORT $LN6@client_set
; Line 66
	jmp	$LN7@client_set
$LN6@client_set:
; Line 67
	mov	DWORD PTR _thisclient$[ebp+136], 0
; Line 69
	push	OFFSET ??_C@_03KPDFKAKH@U?$AB?$CB?$AA@
	lea	eax, DWORD PTR _thisclient$[ebp]
	push	eax
	call	?sendmsg@Client@@QAAXPADZZ		; Client::sendmsg
	add	esp, 8
; Line 70
	mov	DWORD PTR _tiCid$88558[ebp], 0
	jmp	SHORT $LN5@client_set
$LN4@client_set:
	mov	eax, DWORD PTR _tiCid$88558[ebp]
	add	eax, 1
	mov	DWORD PTR _tiCid$88558[ebp], eax
$LN5@client_set:
	mov	eax, DWORD PTR _tiCid$88558[ebp]
	cmp	eax, DWORD PTR ?connect_id@@3HA		; connect_id
	jge	SHORT $LN3@client_set
; Line 71
	mov	eax, DWORD PTR _tiCid$88558[ebp]
	cmp	eax, DWORD PTR _iCid$[ebp]
	je	SHORT $LN2@client_set
; Line 72
	mov	esi, DWORD PTR _tiCid$88558[ebp]
	imul	esi, 216				; 000000d8H
	add	esi, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	mov	ecx, 54					; 00000036H
	lea	edi, DWORD PTR _iclient$[ebp]
	rep movsd
; Line 73
	mov	eax, DWORD PTR _iclient$[ebp+136]
	cmp	eax, DWORD PTR _tmapid$[ebp]
	jne	SHORT $LN2@client_set
; Line 75
	mov	eax, DWORD PTR _iclient$[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _iclient$[ebp+148]
	push	ecx
	mov	edx, DWORD PTR _iclient$[ebp+144]
	push	edx
	mov	eax, DWORD PTR _iclient$[ebp+140]
	push	eax
	lea	ecx, DWORD PTR _iclient$[ebp+203]
	push	ecx
	mov	edx, DWORD PTR _iclient$[ebp]
	push	edx
	push	OFFSET ??_C@_0BE@DIBLMBAH@U?$AB?$CFi?$AB?$CFs?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@
	lea	eax, DWORD PTR _thisclient$[ebp]
	push	eax
	call	?sendmsg@Client@@QAAXPADZZ		; Client::sendmsg
	add	esp, 32					; 00000020H
$LN2@client_set:
; Line 76
	jmp	$LN4@client_set
$LN3@client_set:
; Line 78
	mov	eax, DWORD PTR _thisclient$[ebp+12]
	push	eax
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _thisclient$[ebp+203]
	push	ecx
	mov	edx, DWORD PTR _iCid$[ebp]
	push	edx
	push	OFFSET ??_C@_0BE@DIBLMBAH@U?$AB?$CFi?$AB?$CFs?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AB?$CFi?$AA@
	mov	eax, DWORD PTR _tmapid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iCid$[ebp]
	push	ecx
	call	?sendmap@@YAXHHPADZZ			; sendmap
	add	esp, 36					; 00000024H
; Line 79
	mov	eax, DWORD PTR _tmapid$[ebp]
	mov	DWORD PTR _thisclient$[ebp+136], eax
$LN7@client_set:
; Line 80
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@client_set
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 656				; 00000290H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@client_set:
	DD	2
	DD	$LN11@client_set
$LN11@client_set:
	DD	-224					; ffffff20H
	DD	216					; 000000d8H
	DD	$LN9@client_set
	DD	-448					; fffffe40H
	DD	216					; 000000d8H
	DD	$LN10@client_set
$LN10@client_set:
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN9@client_set:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?client_setupmap@@YAXHH@Z ENDP				; client_setupmap
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?sendall@@YAXHPADZZ				; sendall
EXTRN	__imp__vsprintf:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sendall@@YAXHPADZZ
_TEXT	SEGMENT
_iCid$88577 = -288					; size = 4
_ap$ = -276						; size = 4
_msgbuffer$ = -264					; size = 256
__$ArrayPad$ = -4					; size = 4
_ignorecid$ = 8						; size = 4
_msgformat$ = 12					; size = 4
?sendall@@YAXHPADZZ PROC				; sendall, COMDAT
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 484				; 000001e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 83
	cmp	DWORD PTR ?connect_id@@3HA, 1		; connect_id
	jg	SHORT $LN5@sendall
; Line 84
	jmp	$LN6@sendall
$LN5@sendall:
; Line 87
	lea	eax, DWORD PTR _msgformat$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 88
	mov	esi, esp
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msgformat$[ebp]
	push	ecx
	lea	edx, DWORD PTR _msgbuffer$[ebp]
	push	edx
	call	DWORD PTR __imp__vsprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 89
	mov	DWORD PTR _ap$[ebp], 0
; Line 90
	mov	DWORD PTR _iCid$88577[ebp], 0
	jmp	SHORT $LN4@sendall
$LN3@sendall:
	mov	eax, DWORD PTR _iCid$88577[ebp]
	add	eax, 1
	mov	DWORD PTR _iCid$88577[ebp], eax
$LN4@sendall:
	mov	eax, DWORD PTR _iCid$88577[ebp]
	cmp	eax, DWORD PTR ?connect_id@@3HA		; connect_id
	jge	SHORT $LN6@sendall
; Line 91
	mov	eax, DWORD PTR _iCid$88577[ebp]
	cmp	eax, DWORD PTR _ignorecid$[ebp]
	je	SHORT $LN1@sendall
; Line 92
	lea	eax, DWORD PTR _msgbuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iCid$88577[ebp]
	imul	ecx, 216				; 000000d8H
	add	ecx, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	push	ecx
	call	?sendmsg@Client@@QAAXPADZZ		; Client::sendmsg
	add	esp, 8
$LN1@sendall:
; Line 93
	jmp	SHORT $LN3@sendall
$LN6@sendall:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@sendall
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@sendall:
	DD	1
	DD	$LN9@sendall
$LN9@sendall:
	DD	-264					; fffffef8H
	DD	256					; 00000100H
	DD	$LN8@sendall
$LN8@sendall:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?sendall@@YAXHPADZZ ENDP				; sendall
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sendmap@@YAXHHPADZZ
_TEXT	SEGMENT
_iCid$88595 = -288					; size = 4
_ap$ = -276						; size = 4
_msgbuffer$ = -264					; size = 256
__$ArrayPad$ = -4					; size = 4
_ignorecid$ = 8						; size = 4
_mapid$ = 12						; size = 4
_msgformat$ = 16					; size = 4
?sendmap@@YAXHHPADZZ PROC				; sendmap, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 484				; 000001e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 96
	cmp	DWORD PTR ?connect_id@@3HA, 1		; connect_id
	jge	SHORT $LN5@sendmap
; Line 97
	jmp	$LN6@sendmap
$LN5@sendmap:
; Line 100
	lea	eax, DWORD PTR _msgformat$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 101
	mov	esi, esp
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msgformat$[ebp]
	push	ecx
	lea	edx, DWORD PTR _msgbuffer$[ebp]
	push	edx
	call	DWORD PTR __imp__vsprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	mov	DWORD PTR _ap$[ebp], 0
; Line 103
	mov	DWORD PTR _iCid$88595[ebp], 0
	jmp	SHORT $LN4@sendmap
$LN3@sendmap:
	mov	eax, DWORD PTR _iCid$88595[ebp]
	add	eax, 1
	mov	DWORD PTR _iCid$88595[ebp], eax
$LN4@sendmap:
	mov	eax, DWORD PTR _iCid$88595[ebp]
	cmp	eax, DWORD PTR ?connect_id@@3HA		; connect_id
	jge	SHORT $LN6@sendmap
; Line 104
	mov	eax, DWORD PTR _iCid$88595[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR _ignorecid$[ebp]
	setne	cl
	mov	edx, DWORD PTR _iCid$88595[ebp]
	imul	edx, 216				; 000000d8H
	mov	eax, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	mov	edx, DWORD PTR [eax+edx+136]
	xor	eax, eax
	cmp	edx, DWORD PTR _mapid$[ebp]
	sete	al
	and	ecx, eax
	je	SHORT $LN1@sendmap
; Line 105
	lea	eax, DWORD PTR _msgbuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iCid$88595[ebp]
	imul	ecx, 216				; 000000d8H
	add	ecx, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	push	ecx
	call	?sendmsg@Client@@QAAXPADZZ		; Client::sendmsg
	add	esp, 8
$LN1@sendmap:
; Line 106
	jmp	SHORT $LN3@sendmap
$LN6@sendmap:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@sendmap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@sendmap:
	DD	1
	DD	$LN9@sendmap
$LN9@sendmap:
	DD	-264					; fffffef8H
	DD	256					; 00000100H
	DD	$LN8@sendmap
$LN8@sendmap:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?sendmap@@YAXHHPADZZ ENDP				; sendmap
_TEXT	ENDS
PUBLIC	??_C@_0CP@CLAPJJBL@Conexao?5finalizada?5por?5script?3?5I@ ; `string'
PUBLIC	??_C@_0DF@KNDBEFCI@Cliente?5?$CFs?1?$CFi?5enviou?5mensagem?3?6?$CF@ ; `string'
PUBLIC	??_C@_0CG@NFJONBEF@Cliente?5?$CFs?1?$CFi?5desconectado?5por?5e@ ; `string'
PUBLIC	??_C@_0BP@OHEIGJGH@Cliente?5?$CFs?1?$CFi?5fechou?5conexao?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@NHKJCJMK@Novo?5cliente?3?5?$CFs?1?$CFi?4?6?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?clientloop@@YAXH@Z				; clientloop
EXTRN	__imp__recv@16:PROC
;	COMDAT ??_C@_0CP@CLAPJJBL@Conexao?5finalizada?5por?5script?3?5I@
CONST	SEGMENT
??_C@_0CP@CLAPJJBL@Conexao?5finalizada?5por?5script?3?5I@ DB 'Conexao fin'
	DB	'alizada por script: IP %s - ID %i.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KNDBEFCI@Cliente?5?$CFs?1?$CFi?5enviou?5mensagem?3?6?$CF@
CONST	SEGMENT
??_C@_0DF@KNDBEFCI@Cliente?5?$CFs?1?$CFi?5enviou?5mensagem?3?6?$CF@ DB 'C'
	DB	'liente %s/%i enviou mensagem:', 0aH, '%s', 0aH, '*Fim da mens'
	DB	'agem.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NFJONBEF@Cliente?5?$CFs?1?$CFi?5desconectado?5por?5e@
CONST	SEGMENT
??_C@_0CG@NFJONBEF@Cliente?5?$CFs?1?$CFi?5desconectado?5por?5e@ DB 'Clien'
	DB	'te %s/%i desconectado por erro.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OHEIGJGH@Cliente?5?$CFs?1?$CFi?5fechou?5conexao?4?6?$AA@
CONST	SEGMENT
??_C@_0BP@OHEIGJGH@Cliente?5?$CFs?1?$CFi?5fechou?5conexao?4?6?$AA@ DB 'Cl'
	DB	'iente %s/%i fechou conexao.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NHKJCJMK@Novo?5cliente?3?5?$CFs?1?$CFi?4?6?$AA@
CONST	SEGMENT
??_C@_0BG@NHKJCJMK@Novo?5cliente?3?5?$CFs?1?$CFi?4?6?$AA@ DB 'Novo client'
	DB	'e: %s/%i.', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?clientloop@@YAXH@Z
_TEXT	SEGMENT
_recvr$ = -500						; size = 4
_msgbuffer$ = -488					; size = 256
_client$ = -224						; size = 216
__$ArrayPad$ = -4					; size = 4
_iCid$ = 8						; size = 4
?clientloop@@YAXH@Z PROC				; clientloop, COMDAT
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 696				; 000002b8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-696]
	mov	ecx, 174				; 000000aeH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 109
	mov	esi, DWORD PTR _iCid$[ebp]
	imul	esi, 216				; 000000d8H
	add	esi, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	mov	ecx, 54					; 00000036H
	lea	edi, DWORD PTR _client$[ebp]
	rep movsd
; Line 112
	mov	eax, DWORD PTR _iCid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _client$[ebp+44]
	push	ecx
	push	OFFSET ??_C@_0BG@NHKJCJMK@Novo?5cliente?3?5?$CFs?1?$CFi?4?6?$AA@
	call	?debug_printf@@YAXPADZZ			; debug_printf
	add	esp, 12					; 0000000cH
$LN7@clientloop:
; Line 113
	movzx	eax, BYTE PTR _client$[ebp+169]
	sub	eax, 1
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, BYTE PTR ?exit_cmd@@3_NA		; exit_cmd
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	and	eax, ecx
	je	$LN6@clientloop
; Line 114
	mov	esi, esp
	push	0
	push	256					; 00000100H
	lea	eax, DWORD PTR _msgbuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _client$[ebp+16]
	push	ecx
	call	DWORD PTR __imp__recv@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _recvr$[ebp], eax
; Line 115
	movzx	eax, BYTE PTR _client$[ebp+169]
	cmp	eax, 1
	jne	$LN5@clientloop
; Line 116
	cmp	DWORD PTR _recvr$[ebp], 0
	jne	SHORT $LN4@clientloop
; Line 117
	mov	eax, DWORD PTR _iCid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _client$[ebp+44]
	push	ecx
	push	OFFSET ??_C@_0BP@OHEIGJGH@Cliente?5?$CFs?1?$CFi?5fechou?5conexao?4?6?$AA@
	call	?debug_printf@@YAXPADZZ			; debug_printf
	add	esp, 12					; 0000000cH
; Line 118
	lea	ecx, DWORD PTR _client$[ebp]
	call	?disconect@Client@@QAEXXZ		; Client::disconect
; Line 119
	jmp	$LN8@clientloop
	jmp	SHORT $LN5@clientloop
$LN4@clientloop:
; Line 120
	cmp	DWORD PTR _recvr$[ebp], -1
	jne	SHORT $LN2@clientloop
; Line 121
	mov	eax, DWORD PTR _iCid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _client$[ebp+44]
	push	ecx
	push	OFFSET ??_C@_0CG@NFJONBEF@Cliente?5?$CFs?1?$CFi?5desconectado?5por?5e@
	call	?debug_printf@@YAXPADZZ			; debug_printf
	add	esp, 12					; 0000000cH
; Line 122
	lea	ecx, DWORD PTR _client$[ebp]
	call	?disconect@Client@@QAEXXZ		; Client::disconect
; Line 123
	jmp	SHORT $LN8@clientloop
; Line 124
	jmp	SHORT $LN5@clientloop
$LN2@clientloop:
; Line 125
	lea	eax, DWORD PTR _msgbuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iCid$[ebp]
	push	ecx
	lea	edx, DWORD PTR _client$[ebp+44]
	push	edx
	push	OFFSET ??_C@_0DF@KNDBEFCI@Cliente?5?$CFs?1?$CFi?5enviou?5mensagem?3?6?$CF@
	call	?debug_printf@@YAXPADZZ			; debug_printf
	add	esp, 16					; 00000010H
; Line 126
	lea	eax, DWORD PTR _msgbuffer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _client$[ebp]
	call	?received@Client@@QAEXPAD@Z		; Client::received
$LN5@clientloop:
; Line 129
	jmp	$LN7@clientloop
$LN6@clientloop:
; Line 130
	mov	eax, DWORD PTR _iCid$[ebp]
	push	eax
	lea	ecx, DWORD PTR _client$[ebp+44]
	push	ecx
	push	OFFSET ??_C@_0CP@CLAPJJBL@Conexao?5finalizada?5por?5script?3?5I@
	call	?debug_printf@@YAXPADZZ			; debug_printf
	add	esp, 12					; 0000000cH
$LN8@clientloop:
; Line 132
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@clientloop
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 696				; 000002b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@clientloop:
	DD	2
	DD	$LN12@clientloop
$LN12@clientloop:
	DD	-224					; ffffff20H
	DD	216					; 000000d8H
	DD	$LN10@clientloop
	DD	-488					; fffffe18H
	DD	256					; 00000100H
	DD	$LN11@clientloop
$LN11@clientloop:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN10@clientloop:
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?clientloop@@YAXH@Z ENDP				; clientloop
_TEXT	ENDS
PUBLIC	??_C@_0DO@IIEBOJPL@Erro?3?5O?5servidor?5esta?5cheio?5e?5na@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?serverloop@@YAXXZ				; serverloop
EXTRN	__imp__CreateThread@24:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp__accept@12:PROC
;	COMDAT ??_C@_0DO@IIEBOJPL@Erro?3?5O?5servidor?5esta?5cheio?5e?5na@
CONST	SEGMENT
??_C@_0DO@IIEBOJPL@Erro?3?5O?5servidor?5esta?5cheio?5e?5na@ DB 'Erro: O s'
	DB	'ervidor esta cheio e nao ira aceitar mais usuarios!', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?serverloop@@YAXXZ
_TEXT	SEGMENT
_client_size$ = -36					; size = 4
_saClient$ = -24					; size = 16
__$ArrayPad$ = -4					; size = 4
?serverloop@@YAXXZ PROC					; serverloop, COMDAT
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 136
	mov	eax, 2
	mov	WORD PTR _saClient$[ebp], ax
; Line 137
	mov	DWORD PTR _client_size$[ebp], 16	; 00000010H
$LN4@serverloop:
; Line 138
	movzx	eax, BYTE PTR ?exit_cmd@@3_NA		; exit_cmd
	test	eax, eax
	jne	$LN5@serverloop
; Line 139
	mov	esi, esp
	lea	eax, DWORD PTR _client_size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _saClient$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?hSocket@@3IA		; hSocket
	push	edx
	call	DWORD PTR __imp__accept@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR ?connect_id@@3HA		; connect_id
	push	eax
	mov	ecx, DWORD PTR ?connect_id@@3HA		; connect_id
	imul	ecx, 216				; 000000d8H
	add	ecx, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	call	?connect@Client@@QAEXHI@Z		; Client::connect
; Line 140
	movzx	eax, BYTE PTR ?exit_cmd@@3_NA		; exit_cmd
	cmp	eax, 1
	jne	SHORT $LN2@serverloop
	jmp	$LN5@serverloop
$LN2@serverloop:
; Line 141
	push	16					; 00000010H
	lea	eax, DWORD PTR _saClient$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?connect_id@@3HA		; connect_id
	imul	ecx, 216				; 000000d8H
	mov	edx, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	lea	eax, DWORD PTR [edx+ecx+28]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 142
	mov	ecx, DWORD PTR ?connect_id@@3HA		; connect_id
	imul	ecx, 216				; 000000d8H
	add	ecx, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	call	?addrupdate@Client@@QAEXXZ		; Client::addrupdate
; Line 143
	mov	eax, DWORD PTR ?connect_id@@3HA		; connect_id
	imul	eax, 216				; 000000d8H
	mov	ecx, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	lea	edx, DWORD PTR [ecx+eax+24]
	mov	esi, esp
	push	edx
	push	0
	mov	eax, DWORD PTR ?connect_id@@3HA		; connect_id
	push	eax
	mov	ecx, DWORD PTR ?pCLientFunc@@3PAXA	; pCLientFunc
	push	ecx
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR ?connect_id@@3HA		; connect_id
	imul	edx, 216				; 000000d8H
	mov	ecx, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	mov	DWORD PTR [ecx+edx+20], eax
; Line 144
	mov	eax, DWORD PTR ?connect_id@@3HA		; connect_id
	add	eax, 1
	mov	DWORD PTR ?connect_id@@3HA, eax		; connect_id
; Line 145
	mov	eax, DWORD PTR ?connect_id@@3HA		; connect_id
	cmp	eax, DWORD PTR ?host_maxuser@@3HA	; host_maxuser
	jle	SHORT $LN1@serverloop
; Line 146
	mov	esi, esp
	push	OFFSET ??_C@_0DO@IIEBOJPL@Erro?3?5O?5servidor?5esta?5cheio?5e?5na@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 147
	jmp	SHORT $LN5@serverloop
$LN1@serverloop:
; Line 149
	jmp	$LN4@serverloop
$LN5@serverloop:
; Line 151
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@serverloop
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@serverloop:
	DD	2
	DD	$LN9@serverloop
$LN9@serverloop:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN7@serverloop
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN8@serverloop
$LN8@serverloop:
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN7@serverloop:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?serverloop@@YAXXZ ENDP					; serverloop
_TEXT	ENDS
PUBLIC	??_C@_0DC@BJKIBHJF@Erro?3?5Nao?5foi?5possivel?5inciar?5a?5@ ; `string'
PUBLIC	??_C@_0DL@DMIOLLCN@Erro?3?5E?5necessario?5ter?5no?5minimo@ ; `string'
PUBLIC	??_C@_0DD@LDGFFKDJ@Todos?5os?5usarios?5foram?5desconect@ ; `string'
PUBLIC	??_C@_0CA@NNKBAGPG@Usuario?5?$CFi?5de?5?$CFi?5desconectado?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@FJJILPNP@Desconectando?5os?5usuarios?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@NDIIDJKG@Recepcao?5de?5usuarios?5finalizada?$CB@ ; `string'
PUBLIC	??_C@_0CF@INJEIDAA@Finalizando?5recepcao?5de?5usuarios@ ; `string'
PUBLIC	??_C@_0DP@NMPIKIHI@Conexao?5criada?5com?5sucesso?$CB?6Inic@ ; `string'
PUBLIC	??_C@_0BI@EKHGLDNK@Erro?3?5?8Listen?8?5falhou?4?6?$AA@ ; `string'
PUBLIC	??_C@_0CL@DPKDKBJD@Erro?3?5Nao?5foi?5possivel?5conectar?5@ ; `string'
PUBLIC	??_C@_03OMGOFJGM@ANY?$AA@			; `string'
PUBLIC	??_C@_0CK@PMAFGFED@Erro?3?5Nao?5foi?5possivel?5criar?5uma@ ; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_01FDFGLJHB@2?$AA@				; `string'
PUBLIC	??_C@_0BK@ILFEIMHE@Criando?5conexao?5em?5?$CFs?3?$CFi?6?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?server_main@@YAXXZ				; server_main
EXTRN	__imp__GetExitCodeThread@8:PROC
EXTRN	__imp__TerminateThread@8:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__listen@8:PROC
EXTRN	__imp__bind@12:PROC
EXTRN	__imp__inet_pton@12:PROC
EXTRN	__imp__htons@4:PROC
EXTRN	__imp__socket@12:PROC
EXTRN	__imp__WSAStartup@8:PROC
;	COMDAT ??_C@_0DC@BJKIBHJF@Erro?3?5Nao?5foi?5possivel?5inciar?5a?5@
CONST	SEGMENT
??_C@_0DC@BJKIBHJF@Erro?3?5Nao?5foi?5possivel?5inciar?5a?5@ DB 'Erro: Nao'
	DB	' foi possivel inciar a lybrary winsock.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@DMIOLLCN@Erro?3?5E?5necessario?5ter?5no?5minimo@
CONST	SEGMENT
??_C@_0DL@DMIOLLCN@Erro?3?5E?5necessario?5ter?5no?5minimo@ DB 'Erro: E ne'
	DB	'cessario ter no minimo a versao 2.0 da winsock.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@LDGFFKDJ@Todos?5os?5usarios?5foram?5desconect@
CONST	SEGMENT
??_C@_0DD@LDGFFKDJ@Todos?5os?5usarios?5foram?5desconect@ DB 'Todos os usa'
	DB	'rios foram desconectados com sucesso!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NNKBAGPG@Usuario?5?$CFi?5de?5?$CFi?5desconectado?$CB?6?$AA@
CONST	SEGMENT
??_C@_0CA@NNKBAGPG@Usuario?5?$CFi?5de?5?$CFi?5desconectado?$CB?6?$AA@ DB 'U'
	DB	'suario %i de %i desconectado!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FJJILPNP@Desconectando?5os?5usuarios?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BO@FJJILPNP@Desconectando?5os?5usuarios?4?4?4?6?$AA@ DB 'Desconect'
	DB	'ando os usuarios...', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@NDIIDJKG@Recepcao?5de?5usuarios?5finalizada?$CB@
CONST	SEGMENT
??_C@_0CC@NDIIDJKG@Recepcao?5de?5usuarios?5finalizada?$CB@ DB 'Recepcao d'
	DB	'e usuarios finalizada!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@INJEIDAA@Finalizando?5recepcao?5de?5usuarios@
CONST	SEGMENT
??_C@_0CF@INJEIDAA@Finalizando?5recepcao?5de?5usuarios@ DB 'Finalizando r'
	DB	'ecepcao de usuarios...', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@NMPIKIHI@Conexao?5criada?5com?5sucesso?$CB?6Inic@
CONST	SEGMENT
??_C@_0DP@NMPIKIHI@Conexao?5criada?5com?5sucesso?$CB?6Inic@ DB 'Conexao c'
	DB	'riada com sucesso!', 0aH, 'Iniciando recepcao de usuarios...', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EKHGLDNK@Erro?3?5?8Listen?8?5falhou?4?6?$AA@
CONST	SEGMENT
??_C@_0BI@EKHGLDNK@Erro?3?5?8Listen?8?5falhou?4?6?$AA@ DB 'Erro: ''Listen'
	DB	''' falhou.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DPKDKBJD@Erro?3?5Nao?5foi?5possivel?5conectar?5@
CONST	SEGMENT
??_C@_0CL@DPKDKBJD@Erro?3?5Nao?5foi?5possivel?5conectar?5@ DB 'Erro: Nao '
	DB	'foi possivel conectar a socket.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03OMGOFJGM@ANY?$AA@
CONST	SEGMENT
??_C@_03OMGOFJGM@ANY?$AA@ DB 'ANY', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PMAFGFED@Erro?3?5Nao?5foi?5possivel?5criar?5uma@
CONST	SEGMENT
??_C@_0CK@PMAFGFED@Erro?3?5Nao?5foi?5possivel?5criar?5uma@ DB 'Erro: Nao '
	DB	'foi possivel criar uma socket.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01FDFGLJHB@2?$AA@
CONST	SEGMENT
??_C@_01FDFGLJHB@2?$AA@ DB '2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ILFEIMHE@Criando?5conexao?5em?5?$CFs?3?$CFi?6?$AA@
CONST	SEGMENT
??_C@_0BK@ILFEIMHE@Criando?5conexao?5em?5?$CFs?3?$CFi?6?$AA@ DB 'Criando '
	DB	'conexao em %s:%i', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?server_main@@YAXXZ
_TEXT	SEGMENT
_ci$88676 = -456					; size = 4
_lpExitCode$88673 = -444				; size = 4
_saSever$88655 = -432					; size = 16
_wsaData$ = -408					; size = 400
__$ArrayPad$ = -4					; size = 4
?server_main@@YAXXZ PROC				; server_main, COMDAT
; Line 153
	push	ebp
	mov	ebp, esp
	sub	esp, 652				; 0000028cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-652]
	mov	ecx, 163				; 000000a3H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 154
	mov	esi, esp
	mov	eax, DWORD PTR ?host_port@@3HA		; host_port
	push	eax
	push	OFFSET ?host_addr@@3PADA		; host_addr
	push	OFFSET ??_C@_0BK@ILFEIMHE@Criando?5conexao?5em?5?$CFs?3?$CFi?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 158
	mov	esi, esp
	lea	eax, DWORD PTR _wsaData$[ebp]
	push	eax
	mov	ecx, OFFSET ??_C@_01FDFGLJHB@2?$AA@
	and	ecx, 255				; 000000ffH
	movzx	edx, cl
	mov	eax, OFFSET ??_C@_01GBGANLPD@0?$AA@
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	shl	ecx, 8
	or	edx, ecx
	push	edx
	call	DWORD PTR __imp__WSAStartup@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN22@server_mai
; Line 159
	movzx	eax, WORD PTR _wsaData$[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, al
	cmp	ecx, 2
	jl	$LN21@server_mai
; Line 160
	cmp	DWORD PTR ?host_socktype@@3HA, 0	; host_socktype
	jne	SHORT $LN20@server_mai
; Line 161
	mov	esi, esp
	push	6
	push	1
	push	2
	call	DWORD PTR __imp__socket@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?hSocket@@3IA, eax		; hSocket
	jmp	SHORT $LN19@server_mai
$LN20@server_mai:
; Line 162
	cmp	DWORD PTR ?host_socktype@@3HA, 1	; host_socktype
	jne	SHORT $LN19@server_mai
; Line 163
	mov	esi, esp
	push	17					; 00000011H
	push	2
	push	2
	call	DWORD PTR __imp__socket@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?hSocket@@3IA, eax		; hSocket
$LN19@server_mai:
; Line 165
	cmp	DWORD PTR ?hSocket@@3IA, -1		; hSocket
	jne	SHORT $LN17@server_mai
; Line 166
	mov	esi, esp
	push	OFFSET ??_C@_0CK@PMAFGFED@Erro?3?5Nao?5foi?5possivel?5criar?5uma@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 167
	jmp	$LN23@server_mai
; Line 168
	jmp	$LN16@server_mai
$LN17@server_mai:
; Line 170
	mov	eax, 2
	mov	WORD PTR _saSever$88655[ebp], ax
; Line 171
	mov	esi, esp
	movzx	eax, WORD PTR ?host_port@@3HA
	push	eax
	call	DWORD PTR __imp__htons@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _saSever$88655[ebp+2], ax
; Line 172
	push	OFFSET ??_C@_03OMGOFJGM@ANY?$AA@
	push	OFFSET ?host_addr@@3PADA		; host_addr
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@server_mai
; Line 176
	mov	esi, esp
	lea	eax, DWORD PTR _saSever$88655[ebp+4]
	push	eax
	push	OFFSET ?host_addr@@3PADA		; host_addr
	push	2
	call	DWORD PTR __imp__inet_pton@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN14@server_mai
$LN15@server_mai:
; Line 178
	mov	DWORD PTR _saSever$88655[ebp+4], 0
$LN14@server_mai:
; Line 180
	mov	esi, esp
	push	16					; 00000010H
	lea	eax, DWORD PTR _saSever$88655[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hSocket@@3IA		; hSocket
	push	ecx
	call	DWORD PTR __imp__bind@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN13@server_mai
; Line 181
	mov	esi, esp
	push	OFFSET ??_C@_0CL@DPKDKBJD@Erro?3?5Nao?5foi?5possivel?5conectar?5@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 182
	jmp	$LN23@server_mai
; Line 183
	jmp	$LN16@server_mai
$LN13@server_mai:
; Line 184
	xor	ebx, ebx
	cmp	DWORD PTR ?host_socktype@@3HA, 0	; host_socktype
	sete	bl
	mov	esi, esp
	push	5
	mov	eax, DWORD PTR ?hSocket@@3IA		; hSocket
	push	eax
	call	DWORD PTR __imp__listen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	ecx, ecx
	cmp	eax, -1
	sete	cl
	and	ebx, ecx
	je	SHORT $LN11@server_mai
; Line 185
	mov	esi, esp
	push	OFFSET ??_C@_0BI@EKHGLDNK@Erro?3?5?8Listen?8?5falhou?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 186
	jmp	$LN23@server_mai
$LN11@server_mai:
; Line 188
	mov	esi, esp
	push	OFFSET ??_C@_0DP@NMPIKIHI@Conexao?5criada?5com?5sucesso?$CB?6Inic@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 189
	mov	DWORD PTR ?pSLoopFunc@@3PAXA, OFFSET ?serverloop@@YAXXZ ; pSLoopFunc, serverloop
; Line 190
	mov	DWORD PTR ?pCLientFunc@@3PAXA, OFFSET ?clientloop@@YAXH@Z ; pCLientFunc, clientloop
; Line 191
	mov	esi, esp
	push	OFFSET ?dwSLoopThread@@3KA		; dwSLoopThread
	push	0
	push	0
	mov	eax, DWORD PTR ?pSLoopFunc@@3PAXA	; pSLoopFunc
	push	eax
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?hSLoopThread@@3PAXA, eax	; hSLoopThread
$LN10@server_mai:
; Line 192
	movzx	eax, BYTE PTR ?exit_cmd@@3_NA		; exit_cmd
	test	eax, eax
	jne	SHORT $LN9@server_mai
; Line 193
	mov	esi, esp
	push	122					; 0000007aH
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	esi, ax
	sar	esi, 8
	mov	edi, esp
	push	163					; 000000a3H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	cwde
	sar	eax, 8
	and	esi, eax
	je	SHORT $LN8@server_mai
; Line 194
	mov	BYTE PTR ?exit_cmd@@3_NA, 1		; exit_cmd
$LN8@server_mai:
; Line 195
	jmp	SHORT $LN10@server_mai
$LN9@server_mai:
; Line 196
	mov	esi, esp
	push	OFFSET ??_C@_0CF@INJEIDAA@Finalizando?5recepcao?5de?5usuarios@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 197
	mov	DWORD PTR _lpExitCode$88673[ebp], 0
; Line 198
	mov	esi, esp
	mov	eax, DWORD PTR _lpExitCode$88673[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hSLoopThread@@3PAXA	; hSLoopThread
	push	ecx
	call	DWORD PTR __imp__TerminateThread@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 199
	mov	esi, esp
	push	OFFSET ??_C@_0CC@NDIIDJKG@Recepcao?5de?5usuarios?5finalizada?$CB@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 200
	mov	esi, esp
	push	OFFSET ??_C@_0BO@FJJILPNP@Desconectando?5os?5usuarios?4?4?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 201
	mov	DWORD PTR _ci$88676[ebp], 0
	jmp	SHORT $LN7@server_mai
$LN6@server_mai:
	mov	eax, DWORD PTR _ci$88676[ebp]
	add	eax, 1
	mov	DWORD PTR _ci$88676[ebp], eax
$LN7@server_mai:
	mov	eax, DWORD PTR _ci$88676[ebp]
	cmp	eax, DWORD PTR ?connect_id@@3HA		; connect_id
	jge	$LN5@server_mai
; Line 202
	mov	DWORD PTR _lpExitCode$88673[ebp], 259	; 00000103H
$LN4@server_mai:
; Line 203
	cmp	DWORD PTR _lpExitCode$88673[ebp], 259	; 00000103H
	jne	SHORT $LN3@server_mai
; Line 204
	mov	ecx, DWORD PTR _ci$88676[ebp]
	imul	ecx, 216				; 000000d8H
	add	ecx, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	call	?disconect@Client@@QAEXXZ		; Client::disconect
; Line 205
	mov	esi, esp
	lea	eax, DWORD PTR _lpExitCode$88673[ebp]
	push	eax
	mov	ecx, DWORD PTR _ci$88676[ebp]
	imul	ecx, 216				; 000000d8H
	mov	edx, DWORD PTR ?client_list@@3PAVClient@@A ; client_list
	mov	eax, DWORD PTR [edx+ecx+20]
	push	eax
	call	DWORD PTR __imp__GetExitCodeThread@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 206
	jmp	SHORT $LN4@server_mai
$LN3@server_mai:
; Line 207
	mov	eax, DWORD PTR ?connect_id@@3HA		; connect_id
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _ci$88676[ebp]
	push	ecx
	push	OFFSET ??_C@_0CA@NNKBAGPG@Usuario?5?$CFi?5de?5?$CFi?5desconectado?$CB?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 208
	jmp	$LN6@server_mai
$LN5@server_mai:
; Line 209
	mov	esi, esp
	push	OFFSET ??_C@_0DD@LDGFFKDJ@Todos?5os?5usarios?5foram?5desconect@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@server_mai:
; Line 212
	mov	esi, esp
	mov	eax, DWORD PTR ?hSocket@@3IA		; hSocket
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 213
	jmp	SHORT $LN2@server_mai
$LN21@server_mai:
; Line 214
	mov	esi, esp
	push	OFFSET ??_C@_0DL@DMIOLLCN@Erro?3?5E?5necessario?5ter?5no?5minimo@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 215
	jmp	SHORT $LN23@server_mai
$LN2@server_mai:
; Line 217
	jmp	SHORT $LN23@server_mai
$LN22@server_mai:
; Line 218
	mov	esi, esp
	push	OFFSET ??_C@_0DC@BJKIBHJF@Erro?3?5Nao?5foi?5possivel?5inciar?5a?5@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN23@server_mai:
; Line 222
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@server_mai
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 652				; 0000028cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN29@server_mai:
	DD	3
	DD	$LN28@server_mai
$LN28@server_mai:
	DD	-408					; fffffe68H
	DD	400					; 00000190H
	DD	$LN25@server_mai
	DD	-432					; fffffe50H
	DD	16					; 00000010H
	DD	$LN26@server_mai
	DD	-444					; fffffe44H
	DD	4
	DD	$LN27@server_mai
$LN27@server_mai:
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN26@server_mai:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN25@server_mai:
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
?server_main@@YAXXZ ENDP				; server_main
_TEXT	ENDS
PUBLIC	??_C@_08FNGIOLIF@?$FLRIfail?$FN?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?read_inii@@YAHPAD00H@Z				; read_inii
EXTRN	__imp__GetPrivateProfileStringA@24:PROC
;	COMDAT ??_C@_08FNGIOLIF@?$FLRIfail?$FN?$AA@
CONST	SEGMENT
??_C@_08FNGIOLIF@?$FLRIfail?$FN?$AA@ DB '[RIfail]', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?read_inii@@YAHPAD00H@Z
_TEXT	SEGMENT
_y$ = -40						; size = 32
__$ArrayPad$ = -4					; size = 4
_section$ = 8						; size = 4
_key$ = 12						; size = 4
_file$ = 16						; size = 4
_idefault$ = 20						; size = 4
?read_inii@@YAHPAD00H@Z PROC				; read_inii, COMDAT
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 226
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	32					; 00000020H
	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	push	OFFSET ??_C@_08FNGIOLIF@?$FLRIfail?$FN?$AA@
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _section$[ebp]
	push	eax
	call	DWORD PTR __imp__GetPrivateProfileStringA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 227
	push	OFFSET ??_C@_08FNGIOLIF@?$FLRIfail?$FN?$AA@
	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@read_inii
; Line 228
	mov	eax, DWORD PTR _idefault$[ebp]
	jmp	SHORT $LN3@read_inii
; Line 229
	jmp	SHORT $LN3@read_inii
$LN2@read_inii:
; Line 230
	mov	esi, esp
	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@read_inii:
; Line 231
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@read_inii
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@read_inii:
	DD	1
	DD	$LN6@read_inii
$LN6@read_inii:
	DD	-40					; ffffffd8H
	DD	32					; 00000020H
	DD	$LN5@read_inii
$LN5@read_inii:
	DB	121					; 00000079H
	DB	0
?read_inii@@YAHPAD00H@Z ENDP				; read_inii
_TEXT	ENDS
PUBLIC	??_C@_08IOEOHAJM@DATABASE?$AA@			; `string'
PUBLIC	??_C@_06HBINFOF@phlcdb?$AA@			; `string'
PUBLIC	??_C@_04NNAKGGAP@PASS?$AA@			; `string'
PUBLIC	??_C@_04OOEKJIOI@USER?$AA@			; `string'
PUBLIC	??_C@_04NBFCGMPH@root?$AA@			; `string'
PUBLIC	??_C@_05CAPCAOJG@MYSQL?$AA@			; `string'
PUBLIC	??_C@_09PFCHIMEP@127?40?40?41?$AA@		; `string'
PUBLIC	??_C@_05CJGMFEHO@WELCM?$AA@			; `string'
PUBLIC	??_C@_0O@KCBCGFCN@Bem?9vindo?5?$CFs?$CB?$AA@	; `string'
PUBLIC	??_C@_08ELOGBKDK@MESSAGES?$AA@			; `string'
PUBLIC	??_C@_04KFGJNABM@MOTD?$AA@			; `string'
PUBLIC	??_C@_0BO@PPLMLAGJ@Mensagem?5do?5dia?5indisponivel?$CB?$AA@ ; `string'
PUBLIC	??_C@_08CIMMGPDL@SOCKTYPE?$AA@			; `string'
PUBLIC	??_C@_08LCLCBKLL@MAXUSERS?$AA@			; `string'
PUBLIC	??_C@_04HDFGONMM@PORT?$AA@			; `string'
PUBLIC	??_C@_04CCAEFLLI@HOST?$AA@			; `string'
PUBLIC	??_C@_04LHCGKMLL@ADDR?$AA@			; `string'
PUBLIC	??_C@_0BB@PFLHJHKO@?4?2server?9cfg?4ini?$AA@	; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?load_servercfgs@@YAXXZ				; load_servercfgs
;	COMDAT ??_C@_08IOEOHAJM@DATABASE?$AA@
CONST	SEGMENT
??_C@_08IOEOHAJM@DATABASE?$AA@ DB 'DATABASE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HBINFOF@phlcdb?$AA@
CONST	SEGMENT
??_C@_06HBINFOF@phlcdb?$AA@ DB 'phlcdb', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NNAKGGAP@PASS?$AA@
CONST	SEGMENT
??_C@_04NNAKGGAP@PASS?$AA@ DB 'PASS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OOEKJIOI@USER?$AA@
CONST	SEGMENT
??_C@_04OOEKJIOI@USER?$AA@ DB 'USER', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NBFCGMPH@root?$AA@
CONST	SEGMENT
??_C@_04NBFCGMPH@root?$AA@ DB 'root', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CAPCAOJG@MYSQL?$AA@
CONST	SEGMENT
??_C@_05CAPCAOJG@MYSQL?$AA@ DB 'MYSQL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09PFCHIMEP@127?40?40?41?$AA@
CONST	SEGMENT
??_C@_09PFCHIMEP@127?40?40?41?$AA@ DB '127.0.0.1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05CJGMFEHO@WELCM?$AA@
CONST	SEGMENT
??_C@_05CJGMFEHO@WELCM?$AA@ DB 'WELCM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KCBCGFCN@Bem?9vindo?5?$CFs?$CB?$AA@
CONST	SEGMENT
??_C@_0O@KCBCGFCN@Bem?9vindo?5?$CFs?$CB?$AA@ DB 'Bem-vindo %s!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08ELOGBKDK@MESSAGES?$AA@
CONST	SEGMENT
??_C@_08ELOGBKDK@MESSAGES?$AA@ DB 'MESSAGES', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KFGJNABM@MOTD?$AA@
CONST	SEGMENT
??_C@_04KFGJNABM@MOTD?$AA@ DB 'MOTD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PPLMLAGJ@Mensagem?5do?5dia?5indisponivel?$CB?$AA@
CONST	SEGMENT
??_C@_0BO@PPLMLAGJ@Mensagem?5do?5dia?5indisponivel?$CB?$AA@ DB 'Mensagem '
	DB	'do dia indisponivel!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08CIMMGPDL@SOCKTYPE?$AA@
CONST	SEGMENT
??_C@_08CIMMGPDL@SOCKTYPE?$AA@ DB 'SOCKTYPE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCLCBKLL@MAXUSERS?$AA@
CONST	SEGMENT
??_C@_08LCLCBKLL@MAXUSERS?$AA@ DB 'MAXUSERS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HDFGONMM@PORT?$AA@
CONST	SEGMENT
??_C@_04HDFGONMM@PORT?$AA@ DB 'PORT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CCAEFLLI@HOST?$AA@
CONST	SEGMENT
??_C@_04CCAEFLLI@HOST?$AA@ DB 'HOST', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LHCGKMLL@ADDR?$AA@
CONST	SEGMENT
??_C@_04LHCGKMLL@ADDR?$AA@ DB 'ADDR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PFLHJHKO@?4?2server?9cfg?4ini?$AA@
CONST	SEGMENT
??_C@_0BB@PFLHJHKO@?4?2server?9cfg?4ini?$AA@ DB '.\server-cfg.ini', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?load_servercfgs@@YAXXZ
_TEXT	SEGMENT
_filename$ = -28					; size = 17
__$ArrayPad$ = -4					; size = 4
?load_servercfgs@@YAXXZ PROC				; load_servercfgs, COMDAT
; Line 233
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 234
	mov	eax, DWORD PTR ??_C@_0BB@PFLHJHKO@?4?2server?9cfg?4ini?$AA@
	mov	DWORD PTR _filename$[ebp], eax
	mov	ecx, DWORD PTR ??_C@_0BB@PFLHJHKO@?4?2server?9cfg?4ini?$AA@+4
	mov	DWORD PTR _filename$[ebp+4], ecx
	mov	edx, DWORD PTR ??_C@_0BB@PFLHJHKO@?4?2server?9cfg?4ini?$AA@+8
	mov	DWORD PTR _filename$[ebp+8], edx
	mov	eax, DWORD PTR ??_C@_0BB@PFLHJHKO@?4?2server?9cfg?4ini?$AA@+12
	mov	DWORD PTR _filename$[ebp+12], eax
	mov	cl, BYTE PTR ??_C@_0BB@PFLHJHKO@?4?2server?9cfg?4ini?$AA@+16
	mov	BYTE PTR _filename$[ebp+16], cl
; Line 235
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	16					; 00000010H
	push	OFFSET ?host_addr@@3PADA		; host_addr
	push	OFFSET ??_C@_03OMGOFJGM@ANY?$AA@
	push	OFFSET ??_C@_04LHCGKMLL@ADDR?$AA@
	push	OFFSET ??_C@_04CCAEFLLI@HOST?$AA@
	call	DWORD PTR __imp__GetPrivateProfileStringA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 236
	push	3309					; 00000cedH
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_04HDFGONMM@PORT?$AA@
	push	OFFSET ??_C@_04CCAEFLLI@HOST?$AA@
	call	?read_inii@@YAHPAD00H@Z			; read_inii
	add	esp, 16					; 00000010H
	mov	DWORD PTR ?host_port@@3HA, eax		; host_port
; Line 237
	push	99999					; 0001869fH
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_08LCLCBKLL@MAXUSERS?$AA@
	push	OFFSET ??_C@_04CCAEFLLI@HOST?$AA@
	call	?read_inii@@YAHPAD00H@Z			; read_inii
	add	esp, 16					; 00000010H
	mov	DWORD PTR ?host_maxuser@@3HA, eax	; host_maxuser
; Line 238
	push	0
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_08CIMMGPDL@SOCKTYPE?$AA@
	push	OFFSET ??_C@_04CCAEFLLI@HOST?$AA@
	call	?read_inii@@YAHPAD00H@Z			; read_inii
	add	esp, 16					; 00000010H
	mov	DWORD PTR ?host_socktype@@3HA, eax	; host_socktype
; Line 239
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	129					; 00000081H
	push	OFFSET ?msgs_motd@@3PADA		; msgs_motd
	push	OFFSET ??_C@_0BO@PPLMLAGJ@Mensagem?5do?5dia?5indisponivel?$CB?$AA@
	push	OFFSET ??_C@_04KFGJNABM@MOTD?$AA@
	push	OFFSET ??_C@_08ELOGBKDK@MESSAGES?$AA@
	call	DWORD PTR __imp__GetPrivateProfileStringA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 240
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	129					; 00000081H
	push	OFFSET ?msgs_welcome@@3PADA		; msgs_welcome
	push	OFFSET ??_C@_0O@KCBCGFCN@Bem?9vindo?5?$CFs?$CB?$AA@
	push	OFFSET ??_C@_05CJGMFEHO@WELCM?$AA@
	push	OFFSET ??_C@_08ELOGBKDK@MESSAGES?$AA@
	call	DWORD PTR __imp__GetPrivateProfileStringA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 241
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	16					; 00000010H
	push	OFFSET ?mysql_addr@@3PADA		; mysql_addr
	push	OFFSET ??_C@_09PFCHIMEP@127?40?40?41?$AA@
	push	OFFSET ??_C@_04LHCGKMLL@ADDR?$AA@
	push	OFFSET ??_C@_05CAPCAOJG@MYSQL?$AA@
	call	DWORD PTR __imp__GetPrivateProfileStringA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 242
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	66					; 00000042H
	push	OFFSET ?mysql_user@@3PADA		; mysql_user
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	push	OFFSET ??_C@_04OOEKJIOI@USER?$AA@
	push	OFFSET ??_C@_05CAPCAOJG@MYSQL?$AA@
	call	DWORD PTR __imp__GetPrivateProfileStringA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 243
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	66					; 00000042H
	push	OFFSET ?mysql_pass@@3PADA		; mysql_pass
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_04NNAKGGAP@PASS?$AA@
	push	OFFSET ??_C@_05CAPCAOJG@MYSQL?$AA@
	call	DWORD PTR __imp__GetPrivateProfileStringA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 244
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	66					; 00000042H
	push	OFFSET ?mysql_database@@3PADA		; mysql_database
	push	OFFSET ??_C@_06HBINFOF@phlcdb?$AA@
	push	OFFSET ??_C@_08IOEOHAJM@DATABASE?$AA@
	push	OFFSET ??_C@_05CAPCAOJG@MYSQL?$AA@
	call	DWORD PTR __imp__GetPrivateProfileStringA@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	push	0
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_04HDFGONMM@PORT?$AA@
	push	OFFSET ??_C@_05CAPCAOJG@MYSQL?$AA@
	call	?read_inii@@YAHPAD00H@Z			; read_inii
	add	esp, 16					; 00000010H
	mov	DWORD PTR ?mysql_cfgport@@3HA, eax	; mysql_cfgport
; Line 246
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@load_serve
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@load_serve:
	DD	1
	DD	$LN4@load_serve
$LN4@load_serve:
	DD	-28					; ffffffe4H
	DD	17					; 00000011H
	DD	$LN3@load_serve
$LN3@load_serve:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
?load_servercfgs@@YAXXZ ENDP				; load_servercfgs
_TEXT	ENDS
PUBLIC	??_C@_0L@KFGNCEBD@Erro?3?5?$CFs?4?6?$AA@	; `string'
PUBLIC	??_C@_0BM@PIHMGILP@Erro?3?5?8WSACleanup?8?5falhou?4?6?$AA@ ; `string'
PUBLIC	??_C@_0FG@IKPOIKLM@Conectado?5a?5MySQL?5com?5sucesso?$CB?6P@ ; `string'
PUBLIC	??_C@_0DK@LBHBAKND@Conectando?5a?5MySQL?5via?3?5IP?5?$CFs?5PO@ ; `string'
PUBLIC	??_C@_0CH@INKJIAMP@O?5servidor?5esta?5utilizando?5?$CCws2t@ ; `string'
PUBLIC	??_C@_0GN@DOFPNEHC@?$CK?7Servidor?5em?5C?$CL?$CL?6?$CK?7Criado?5por?5P@ ; `string'
PUBLIC	??_C@_03LCPHGAHP@cls?$AA@			; `string'
PUBLIC	??_C@_0M@HLAEFKGI@?4?2debug?4txt?$AA@		; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_08JFBMGEOC@?9nogetch?$AA@			; `string'
PUBLIC	??_C@_0M@ILCEILM@?9printdebug?$AA@		; `string'
PUBLIC	_main
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
EXTRN	__imp__fclose:PROC
EXTRN	__imp__WSACleanup@0:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__imp__system:PROC
EXTRN	__imp__fopen_s:PROC
EXTRN	__imp__EnableMenuItem@12:PROC
EXTRN	__imp__GetSystemMenu@8:PROC
EXTRN	__imp__GetConsoleWindow@0:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0PAD@8
_DATA	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
_DATA	ENDS
;	COMDAT ??_C@_0L@KFGNCEBD@Erro?3?5?$CFs?4?6?$AA@
CONST	SEGMENT
??_C@_0L@KFGNCEBD@Erro?3?5?$CFs?4?6?$AA@ DB 'Erro: %s.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PIHMGILP@Erro?3?5?8WSACleanup?8?5falhou?4?6?$AA@
CONST	SEGMENT
??_C@_0BM@PIHMGILP@Erro?3?5?8WSACleanup?8?5falhou?4?6?$AA@ DB 'Erro: ''WS'
	DB	'ACleanup'' falhou.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@IKPOIKLM@Conectado?5a?5MySQL?5com?5sucesso?$CB?6P@
CONST	SEGMENT
??_C@_0FG@IKPOIKLM@Conectado?5a?5MySQL?5com?5sucesso?$CB?6P@ DB 'Conectad'
	DB	'o a MySQL com sucesso!', 0aH, 'Pressione Ctrl(Direito)+F11 pa'
	DB	'ra encerrar o servidor!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@LBHBAKND@Conectando?5a?5MySQL?5via?3?5IP?5?$CFs?5PO@
CONST	SEGMENT
??_C@_0DK@LBHBAKND@Conectando?5a?5MySQL?5via?3?5IP?5?$CFs?5PO@ DB 'Conect'
	DB	'ando a MySQL via: IP %s PORTA %i USER %s DB %s ...', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@INKJIAMP@O?5servidor?5esta?5utilizando?5?$CCws2t@
CONST	SEGMENT
??_C@_0CH@INKJIAMP@O?5servidor?5esta?5utilizando?5?$CCws2t@ DB 'O servido'
	DB	'r esta utilizando "ws2tcpip".', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@DOFPNEHC@?$CK?7Servidor?5em?5C?$CL?$CL?6?$CK?7Criado?5por?5P@
CONST	SEGMENT
??_C@_0GN@DOFPNEHC@?$CK?7Servidor?5em?5C?$CL?$CL?6?$CK?7Criado?5por?5P@ DB '*'
	DB	09H, 'Servidor em C++', 0aH, '*', 09H, 'Criado por PedroHLC', 0aH
	DB	'*', 09H, 'Utilize como quiser so nao se esqueca de me colocar'
	DB	' nos creditos!', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LCPHGAHP@cls?$AA@
CONST	SEGMENT
??_C@_03LCPHGAHP@cls?$AA@ DB 'cls', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HLAEFKGI@?4?2debug?4txt?$AA@
CONST	SEGMENT
??_C@_0M@HLAEFKGI@?4?2debug?4txt?$AA@ DB '.\debug.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08JFBMGEOC@?9nogetch?$AA@
CONST	SEGMENT
??_C@_08JFBMGEOC@?9nogetch?$AA@ DB '-nogetch', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ILCEILM@?9printdebug?$AA@
CONST	SEGMENT
??_C@_0M@ILCEILM@?9printdebug?$AA@ DB '-printdebug', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$_main$2 DD 00H
	DD	FLAT:??_R0PAD@8
	DD	0ffffffd0H
	DD	FLAT:__catch$_main$0
__unwindtable$_main DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$_main DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$_main$2
__ehfuncinfo$_main DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$_main
	DD	01H
	DD	FLAT:__tryblocktable$_main
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT _main
_TEXT	SEGMENT
$T95510 = -252						; size = 4
_exception_error$88749 = -48				; size = 4
_ai$88728 = -36						; size = 4
_console_hWnd$ = -24					; size = 4
__$EHRec$ = -16						; size = 16
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; Line 248
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 249
	mov	esi, esp
	call	DWORD PTR __imp__GetConsoleWindow@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _console_hWnd$[ebp], eax
; Line 250
	mov	esi, esp
	push	1
	push	61536					; 0000f060H
	mov	edi, esp
	push	0
	mov	eax, DWORD PTR _console_hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__GetSystemMenu@8
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__EnableMenuItem@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 252
	mov	BYTE PTR ?printdebug@@3_NA, 0		; printdebug
; Line 253
	mov	BYTE PTR ?nogetch@@3_NA, 0		; nogetch
; Line 254
	mov	BYTE PTR ?exit_cmd@@3_NA, 0		; exit_cmd
; Line 255
	cmp	DWORD PTR _argc$[ebp], 0
	jle	SHORT $LN9@main
; Line 256
	mov	DWORD PTR _ai$88728[ebp], 0
	jmp	SHORT $LN8@main
$LN7@main:
	mov	eax, DWORD PTR _ai$88728[ebp]
	add	eax, 1
	mov	DWORD PTR _ai$88728[ebp], eax
$LN8@main:
	mov	eax, DWORD PTR _ai$88728[ebp]
	cmp	eax, DWORD PTR _argc$[ebp]
	jge	SHORT $LN9@main
; Line 257
	push	OFFSET ??_C@_0M@ILCEILM@?9printdebug?$AA@
	mov	eax, DWORD PTR _ai$88728[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@main
; Line 258
	mov	BYTE PTR ?printdebug@@3_NA, 1		; printdebug
	jmp	SHORT $LN4@main
$LN5@main:
; Line 259
	push	OFFSET ??_C@_08JFBMGEOC@?9nogetch?$AA@
	mov	eax, DWORD PTR _ai$88728[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@main
; Line 260
	mov	BYTE PTR ?nogetch@@3_NA, 1		; nogetch
$LN4@main:
; Line 261
	jmp	SHORT $LN7@main
$LN9@main:
; Line 264
	mov	esi, esp
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	OFFSET ??_C@_0M@HLAEFKGI@?4?2debug?4txt?$AA@
	push	OFFSET ?pDebugFile@@3PAU_iobuf@@A	; pDebugFile
	call	DWORD PTR __imp__fopen_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 265
	mov	esi, esp
	push	OFFSET ??_C@_03LCPHGAHP@cls?$AA@
	call	DWORD PTR __imp__system
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 266
	mov	esi, esp
	push	OFFSET ??_C@_0GN@DOFPNEHC@?$CK?7Servidor?5em?5C?$CL?$CL?6?$CK?7Criado?5por?5P@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 270
	mov	esi, esp
	push	OFFSET ??_C@_0CH@INKJIAMP@O?5servidor?5esta?5utilizando?5?$CCws2t@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 272
	mov	DWORD PTR ?connect_id@@3HA, 0		; connect_id
; Line 273
	call	?load_servercfgs@@YAXXZ			; load_servercfgs
; Line 274
	xor	ecx, ecx
	mov	eax, DWORD PTR ?host_maxuser@@3HA	; host_maxuser
	mov	edx, 216				; 000000d8H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T95510[ebp], eax
	mov	eax, DWORD PTR $T95510[ebp]
	mov	DWORD PTR ?client_list@@3PAVClient@@A, eax ; client_list
; Line 275
	mov	esi, esp
	push	OFFSET ?mysql_database@@3PADA		; mysql_database
	push	OFFSET ?mysql_user@@3PADA		; mysql_user
	mov	eax, DWORD PTR ?mysql_cfgport@@3HA	; mysql_cfgport
	push	eax
	push	OFFSET ?mysql_addr@@3PADA		; mysql_addr
	push	OFFSET ??_C@_0DK@LBHBAKND@Conectando?5a?5MySQL?5via?3?5IP?5?$CFs?5PO@
	call	DWORD PTR __imp__printf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 276
	mov	ecx, OFFSET ?smysql@@3VSimpleMysql@@A	; smysql
	call	?init@SimpleMysql@@QAEXXZ		; SimpleMysql::init
; Line 277
	push	0
	push	OFFSET ?mysql_database@@3PADA		; mysql_database
	push	OFFSET ?mysql_pass@@3PADA		; mysql_pass
	push	OFFSET ?mysql_user@@3PADA		; mysql_user
	push	OFFSET ?mysql_addr@@3PADA		; mysql_addr
	mov	ecx, OFFSET ?smysql@@3VSimpleMysql@@A	; smysql
	call	?connect@SimpleMysql@@QAEXPAD000H@Z	; SimpleMysql::connect
; Line 278
	mov	esi, esp
	push	OFFSET ??_C@_0FG@IKPOIKLM@Conectado?5a?5MySQL?5com?5sucesso?$CB?6P@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 279
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 280
	call	?server_main@@YAXXZ			; server_main
; Line 281
	mov	esi, esp
	call	DWORD PTR __imp__WSACleanup@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@main
; Line 282
	mov	esi, esp
	push	OFFSET ??_C@_0BM@PIHMGILP@Erro?3?5?8WSACleanup?8?5falhou?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@main:
	jmp	SHORT $LN12@main
__catch$_main$0:
; Line 285
	mov	esi, esp
	mov	eax, DWORD PTR _exception_error$88749[ebp]
	push	eax
	push	OFFSET ??_C@_0L@KFGNCEBD@Erro?3?5?$CFs?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 286
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$_main$1
	ret	0
$LN12@main:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$_main$1:
; Line 287
	mov	ecx, OFFSET ?smysql@@3VSimpleMysql@@A	; smysql
	call	?close@SimpleMysql@@QAEXXZ		; SimpleMysql::close
; Line 288
	mov	esi, esp
	mov	eax, DWORD PTR ?pDebugFile@@3PAU_iobuf@@A ; pDebugFile
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 289
	call	?finish@@YAXXZ				; finish
; Line 290
	xor	eax, eax
; Line 291
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN20@main:
	DD	1
	DD	$LN19@main
$LN19@main:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN17@main
$LN17@main:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	95					; 0000005fH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
EXTRN	__imp__vsprintf_s:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$vsprintf_s@$0EAA@@@YAHAAY0EAA@DPBDPAD@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
__Args$ = 16						; size = 4
??$vsprintf_s@$0EAA@@@YAHAAY0EAA@DPBDPAD@Z PROC		; vsprintf_s<1024>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\stdio.h
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Args$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	push	1024					; 00000400H
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	DWORD PTR __imp__vsprintf_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$vsprintf_s@$0EAA@@@YAHAAY0EAA@DPBDPAD@Z ENDP		; vsprintf_s<1024>
_TEXT	ENDS
EXTRN	__imp__strcpy_s:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$strcpy_s@$0CB@@@YAHAAY0CB@DPBD@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Source$ = 12						; size = 4
??$strcpy_s@$0CB@@@YAHAAY0CB@DPBD@Z PROC		; strcpy_s<33>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\string.h
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Source$[ebp]
	push	eax
	push	33					; 00000021H
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$strcpy_s@$0CB@@@YAHAAY0CB@DPBD@Z ENDP		; strcpy_s<33>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$vsprintf_s@$0BAA@@@YAHAAY0BAA@DPBDPAD@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
__Args$ = 16						; size = 4
??$vsprintf_s@$0BAA@@@YAHAAY0BAA@DPBDPAD@Z PROC		; vsprintf_s<256>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\stdio.h
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Args$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	push	256					; 00000100H
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	DWORD PTR __imp__vsprintf_s
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$vsprintf_s@$0BAA@@@YAHAAY0BAA@DPBDPAD@Z ENDP		; vsprintf_s<256>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$strcpy_s@$0M@@@YAHAAY0M@DPBD@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Source$ = 12						; size = 4
??$strcpy_s@$0M@@@YAHAAY0M@DPBD@Z PROC			; strcpy_s<12>, COMDAT
; File c:\program files\microsoft visual studio 10.0\vc\include\string.h
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Source$[ebp]
	push	eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$strcpy_s@$0M@@@YAHAAY0M@DPBD@Z ENDP			; strcpy_s<12>
_TEXT	ENDS
END
